<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_chest_light</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-202</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>type = choose(0,1,2,3,4,5,6,7,8);
number = choose(1,2,3,4);
dest_x=0;
dest_y=0;
pre_dest_x=0;
pre_dest_y=0;
sprite = sprite_index;
image = 0;
last = 0;
alarm[1]=1;
image_xscale=0;
image_yscale=0;

drop_sound=Main.snd_item_power;
l_angle=0;
size_mod = 0;
timeline_index = tml_chestlight;
timeline_position = 0;
timeline_running = true;
timeline_loop = 0;
timeline_speed = 0.375*global.spd;

//добавим этот объект в лист кнопок меню размытия, чтоб он мог это все разломать 
ds_list_add(obj_pause_menu.button_list,id);

phase=1;
shift_time=15;
zigz = choose(1,2,3,4);
t = -sqrt(shift_time);
move_side = choose(-1,1);
direction = 0;
speed=0;
stop=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///stop on pre destination


if phase=1 {
phase=2;
move_side*=-1;

var ptch=random_range(0.9,1.1);
var gain=random_range(0.8,1);
scr_sound(drop_sound,1,0,ptch,gain);

alarm[4]=shift_time;
} else {
stop=1;
speed=0;

if last = 1 {

//готово
button_close = instance_create(room_width/2,1590,obj_button);
button_close.index = 18;
ds_list_add(obj_pause_menu.button_list,button_close);
}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///stop flying

if phase=1 {
phase=2;
move_side*=-1;
alarm[3]=shift_time;
} else {
stop=1;
speed=0;
//отсыпать что прилетело
switch type {
case 0: //золото
Main.gold+=number;
break;
case 1: //серебрянные ключи
Main.silver_keys+=number;
break;
case 2: //золотые ключи
Main.gold_keys+=number;
break;
case 3: //камни
Main.gems+=number;
break;
case 4: //павер - грибы
Main.powerup_num[1]+=number;
break;
case 5: //павер - кресты
Main.powerup_num[2]+=number;
break;
case 6: //павер - мухи
Main.powerup_num[3]+=number;
break;
case 7: //павер - замедление
Main.powerup_num[4]+=number;
break;
case 8: //павер - заморозка
Main.powerup_num[5]+=number;
break;
}

//var ptch=random_range(0.9,1.1);
var gain=random_range(0.8,1);
scr_sound(drop_sound,1,0,0.6,0.7);

//сохранить это
instance_destroy();
if last=1 obj_bookmark_chest_opening.alarm[10]=room_speed/3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///fly to destination

if stop!=0 {        
direction=point_direction(x,y,dest_x-86,dest_y);
shift_time=choose(12,14,16)/global.spd;
speed=round(point_distance(x,y,dest_x-86,dest_y)/(shift_time*2));
zigz = choose(1,2,3,4);
alarm[3]=shift_time+1;
t = -sqrt(shift_time);
move_side = choose(-1,1);
stop=0;
phase=1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///switch type / fly to pre_destination

switch type {
case 0: //золото
sprite=sp_hud_icon;  image=1; dest_x=677;   dest_y=92;     drop_sound=Main.snd_item_coin;
break;
case 1: //серебрянные ключи
sprite=sp_hud_icon;  image=2; dest_x=940;   dest_y=95;     drop_sound=Main.snd_item_key;
break;
case 2: //золотые ключи
sprite=sp_hud_icon;  image=3; dest_x=1170;  dest_y=95;     drop_sound=Main.snd_item_key;
break;
case 3: //камни
sprite=sp_hud_icon;  image=4; dest_x=1430;  dest_y=95;     drop_sound=Main.snd_item_gem;
break;
case 4: //павер - грибы
sprite=sp_powerups;  image=0; dest_x=622;   dest_y=1906;   drop_sound=Main.snd_item_power;
break;
case 5: //павер - кресты
sprite=sp_powerups;  image=1; dest_x=825;   dest_y=1906;   drop_sound=Main.snd_item_power;
break;
case 6: //павер - мухи
sprite=sp_powerups;  image=2; dest_x=1027;  dest_y=1906;   drop_sound=Main.snd_item_power;
break;
case 7: //павер - замедление
sprite=sp_powerups;  image=3; dest_x=1225;  dest_y=1906;   drop_sound=Main.snd_item_power;
break;
case 8: //павер - заморозка
sprite=sp_powerups;  image=4; dest_x=1430;  dest_y=1906;   drop_sound=Main.snd_item_power;
break;

}



direction=point_direction(x,y,pre_dest_x,pre_dest_y);
shift_time=16/global.spd;
speed=point_distance(x,y,pre_dest_x,pre_dest_y)/(shift_time*2);
zigz = choose(1,2,3,4);
alarm[4]=shift_time+1;
t = -sqrt(shift_time);
move_side = choose(-1,1);
stop=2;
phase=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///after bounce


//alarm[2]=room_speed;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale += size_mod/2*global.spd;
image_yscale += size_mod/2*global.spd;
l_angle-=2*global.spd;

if stop=0 {
    t = sqrt(abs(alarm[3]-shift_time));
    shift = (move_side*(-power(t,2) + shift_time/2))*(1*global.spd);
 
    x+=lengthdir_x(shift*zigz,direction-45);
    y+=lengthdir_y(shift*zigz,direction-45);
} else if stop=2 {
    t = sqrt(abs(alarm[4]-shift_time));
    shift = (move_side*(-power(t,2) + shift_time/2))*(1*global.spd);
    
    x+=lengthdir_x(shift*zigz,direction-45);
    y+=lengthdir_y(shift*zigz,direction-45);
}


//крутящийся синий свет
draw_sprite_ext(sprite_index,0,x,y,image_xscale*0.8,image_yscale*0.8,l_angle,noone,1);
//сам объект
draw_sprite_ext(sprite,image,x,y,image_xscale,image_yscale,0,noone,1);
//количество
if number&gt;1 {
draw_set_valign(fa_middle);
draw_set_halign(fa_center);
draw_set_color(c_white);
draw_set_font(font_27);
draw_text_transformed(x,y+90*image_xscale,number,image_xscale,image_yscale,0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
