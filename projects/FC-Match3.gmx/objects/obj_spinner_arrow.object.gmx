<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_spinner_arrow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-202</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_add(obj_pause_menu.button_list,id);

shift=0;
shift_time=60;
t = -sqrt(shift_time);
move_side = 1;
spin=0;

spin_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///stop spinning
        spin=0;
        
        var dr=direction;
        var ind=0;
        if dr&gt;=35 and dr&lt;82 ind=2;
        else if dr&gt;=82 and dr&lt;144 ind=1;
        else if dr&gt;=144 and dr&lt;282 ind=6;
        else if dr&gt;=282 and dr&lt;313 ind=5;
        else if dr&gt;=313 and dr&lt;342 ind=4;
        else if (dr&gt;=342 and dr&lt;395) or (dr&gt;=-18 and dr&lt;35) ind=3;
        spin_speed=ind;
        
        with obj_spinner_drop {
            if index=other.spin_speed alarm[2]=1;
        } 
        
        spin_speed=0;
        obj_spinner.spin+=1;
        with obj_button {
            if index=22 {
                image_blend=c_white;
            }
            if index=21 {
                image_blend=c_white;
                var spinnns=0;
                if Main.level_played &gt;= Main.level_passed-1 spinnns=Main.spinner_freespin;//последние 2
                else spinnns=1;
                if obj_spinner.spin&lt;spinnns {//все еще идут обычные спины
                    
                } else  {
                    //обычные только что кончились. спауним спины за рекламу и за деньги
                    //сам этот становится за деньги. недоступен пока их нет? 
                    if mode = 0 {//если это обычный - подестроился и сделал два новых
                        if AdColony_VideoAvailable()=1 or GoogleMobileAds_InterstitialStatus()=="Ready" {
                            mode = 2;//какая то реклама доступна, стал за рекламу
                            alarm[0]=1;
                        } else {
                            mode = 1;//иначе стал сразу за деньги
                            alarm[0]=1;
                        }
                    } else if mode=1 {
                        if obj_spinner.gemspin_cost&lt;5+Main.spinner_gemspin {//еще можно крутить
                            obj_spinner.gemspin_cost+=1;
                            alarm[0]=1;
                        } else { //уже нет, ломаем кнопку
                            ds_list_delete(obj_pause_menu.button_list,ds_list_find_index(obj_pause_menu.button_list,ds_list_find_value(obj_pause_menu.button_list,obj_spinner.button_1)));
                            instance_destroy();
                        }
                    } else if mode=2 {//мы только что закончили смотреть рекламу, так что убираем ее
                        mode = 1;//стал за деньги
                        alarm[0]=1;
                    }
                }
            }
        }
        
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if spin=1 {
    t = sqrt(abs(alarm[0]-shift_time));
    shift = (move_side*(-power(t,2) + shift_time))/**(2/global.spd)*/;
 
    spin_speed=shift/(6*(2/global.spd));
    direction-=spin_speed;
    image_angle=direction;
    /*if spin_speed&lt;=0 {
        spin=0;
        
        var dr=direction;
        var ind=0;
        if dr&gt;=35 and dr&lt;82 ind=2;
        else if dr&gt;=82 and dr&lt;144 ind=1;
        else if dr&gt;=144 and dr&lt;282 ind=6;
        else if dr&gt;=282 and dr&lt;313 ind=5;
        else if dr&gt;=313 and dr&lt;342 ind=4;
        else if (dr&gt;=342 and dr&lt;395) or (dr&gt;=-18 and dr&lt;35) ind=3;
        spin_speed=ind;
        
        with obj_spinner_drop {
            if index=other.spin_speed alarm[2]=1;
        } 
        spin_speed=0;
    }*/
}

draw_self();
draw_sprite(sp_spinner_bolt,0,x,y);
/*draw_set_color(c_red);
draw_text(x,y,round(shift));*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
