<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_bookmarks_icons</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
visible=0;
bookmark_index=0;
line = '';
state = 0; 
going_to_state = 0;
last_click = 0;
//0 - закрыт
//1 - открывается
//2 - открыт
//3 - закрывается
y_start=y;

alarm[0]=1;

t=0;
move_side=-1;
shiftt=0;
stopped = 1;
close_time = 5+10/global.spd;

shift_speed=0.85*global.spd;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Slide end

stopped=1;
obj_controller_bookmark.bookmark_moves=0;

if state = 1 { //открылась
    state = 2;
    if last_click=1 {
        
        if instance_exists(obj_badge) {
            with obj_badge {
                if target=other {
                    if type=1 {
                        with obj_button {
                            if index=19 {
                            var badge = instance_create(0,0,obj_badge);
                            badge.target = id;
                            badge.parent = id;
                            badge.num=other.num;
                            badge.type=2;
                            badge.x_shift=345;
                            badge.y_shift=-58;
                            badge.depth=-203;
                            }
                        }
                    } 
                    mode=1;
                }
            }
        }
    
        with obj_bookmark {
            if id!=other.id {
                if state=2 scr_close_bookmark(id);
                else if state=1 going_to_state = 3
            }
        }
    } else {//если когда открылась, жмакнули что-то другое, закрывается
        scr_close_bookmark(id);
    }
}
else if state = 3 { //закрылась
    //y=y_start;
    state = 0 
    if going_to_state = 1 { //пока закрывалась, ее открыли - сразу начинает открываться
        going_to_state = 0;  
        if last_click=1 scr_open_bookmark(id);  
    } else {
        going_to_state = 0;
    }    
}

/*
if going_to_state = 3 { //пока открывалась, открыли другую - сразу начинает закрываться
            going_to_state = 0;     
            scr_close_bookmark(id);
            exit;
        } else {
            going_to_state = 0;
            with obj_bookmark {
                if id!=other.id and last_click=0{
                    if state=2 scr_close_bookmark(id);
                    else if state=1 going_to_state = 3
                }
            }
        }
    } else {//если когда открылась, жмакнули что-то другое, закрывается
        scr_close_bookmark(id);
    }*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = bookmark_index-1;

switch bookmark_index {
case 1: 
line = mtf.l_book[1,0];
break;

case 2: 
line = mtf.l_book[2,0];
break;

case 3: 
line = mtf.l_book[3,0];
break;

case 4: 
line = mtf.l_book[4,0];
break;

case 5: 
line = mtf.l_book[5,0];
break;
}

if bookmark_index = 3 { //тот, что был открыт последний раз
    last_click=1;
} 
visible=1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.bookmark_level != 0 exit;
if bookmark_index!=3 and obj_tip_pig.show_text=2 obj_tip_pig.show_text=3;
scr_bookmark_goto(id)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if !stopped {
    t = sqrt(abs(alarm[1]-close_time));
    shiftt = (move_side*(-power(t,2) + close_time));
    y += shiftt*shift_speed;
}

draw_self();
draw_set_color(c_white);
draw_set_valign(fa_middle);
draw_set_halign(fa_center);
draw_set_font(font_27);
draw_set_alpha((y_start+7-50-y)/50);
if last_click = 1 draw_text(x,y+110,line);
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
