<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mode=0;
//0 - пытаемся получить инфу от фейсбука,
//или какая то первоначальная загрузка
//1 - список составлен
//2 - нет сети
//3 - нужно подключение, делаем кнопку

target=0;
x_shift=0;
y_shift=0;

cc_shadow=make_color_rgb(6,22,6);
cc_ttl_light=make_color_rgb(255,232,219);
cc_ttl_dark =make_color_rgb(166,67,15);
color1=cc_ttl_dark;
color2=cc_ttl_light;

friends_scored=0;//-1 если правда никого нет, тогда 0 если еще не проверено 
friends_height=0;

txt_nofriends[0]=mtf.l_book[5,1];
txt_nofriends[1]=mtf.l_book[5,2];
txt_nofriends[2]=mtf.l_book[5,3];
txt_nofriends[3]=mtf.l_book[5,4];
txt_nofriends[4]=mtf.l_book[5,5];

// buttons
button_login=0;
fb_button=0;
button_invite=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///log in
var status=facebook_status();

if status="AUTHORISED" {
  Main.fb_connected=1;
  scr_save();
  if fb_button!=0 { 
    ds_list_delete(target.child_list,ds_list_find_index(target.child_list,fb_button));
    with fb_button instance_destroy();
    fb_button=0;
  }
  if friends_scored=0 scr_fb_check_score();
} else if status="FAILED" {
  Main.fb_connected=0;
  scr_save();
} else {
  alarm[1]=room_speed;
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///получаем запрос Score
/*{"data": [
    {
      "score": 62,
      "user": {
        "name": "Zuek Zuekson",
        "id": "202516373614710"
      }
    },
    {
      "score": 23,
      "user": {
        "name": "Regina Yushkova",
        "id": "10209808600919871"
      }
    },
  ]          }*/
if ds_map_exists(fb_scores, "data") { 
    mode=1;
    var score_list=ds_map_find_value(fb_scores,"data");                        // ds_list
    
    if ds_list_empty(score_list) { //лист пусой, либо глюк либо никто, даже игрок еще не получал скоров
        //destroy maps, free memory
        ds_list_destroy(score_list);
        friends_scored=-1;
        exit;
    }
    
    var strt = 300;//805
    for(var i=0; i&lt;ds_list_size(score_list); i++) {
        var this_friend_map = ds_list_find_value(score_list, i);              // ds_map
        var this_friend_user = ds_map_find_value(this_friend_map, "user");  // ds_map
        fb_friend_score[i]  = ds_map_find_value(this_friend_map, "score");   // value   
        fb_friend_name[i]  = ds_map_find_value(this_friend_user, "name");    // value       
        fb_friend_id[i]    = ds_map_find_value(this_friend_user, "id");      // value    
            
        var xx=x;
        var yy=strt+173*i;
        var plash = instance_create(xx,yy,obj_bookmark_score);
        plash.target=target;
        plash.x_shift=0;
        plash.y_shift=yy;
        plash.friend_name  = string(fb_friend_name[i]);
        plash.friend_id    = fb_friend_id[i];
        plash.friend_score = fb_friend_score[i];
        if plash.friend_id=facebook_user_id() plash.is_player=1;
        ds_list_add(target.child_list,plash);            
        
        friends_scored+=1;
        //destroy maps, free memory
        ds_map_destroy(this_friend_map);
        ds_map_destroy(this_friend_user);
    }
    target.bookmark_height=strt+173*(i-1)/*+130*/;
    
    //destroy maps, free memory
    ds_list_destroy(score_list);
    
} else {
    log(facebook_status());
    scr_fb_check_score();
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
//или какая то первоначальная загрузка
//1 - список составлен
//2 - нет сети
//txt_nofriends[0]='Проверка подключения...';
//txt_nofriends[1]='Никто из ваших друзей пока не играет!';
//txt_nofriends[2]='Подключитесь к сети,'+'#'+'чтобы загрузить список лидеров.';
//txt_nofriends[3]='Составляем список друзей...';

if mode = 0 { //еще проверяем залогинен ли, пытаемся получить инфу от фейсбука,
draw_set_valign(fa_middle);
draw_set_halign(fa_center);
draw_set_color(c_white);
draw_set_font(font_30);
draw_text(x,1070+45,txt_nofriends[3]);
} else if mode=1 { //список составлен
draw_set_valign(fa_middle);
draw_set_halign(fa_center);
draw_set_color(c_white);
draw_set_font(font_30);
if friends_scored=0 draw_text(x,1070+45,txt_nofriends[3]);
else if friends_scored=-1 draw_text(x,1070+45,txt_nofriends[1]);
} else if mode = 2 {//нет сети
draw_set_valign(fa_middle);
draw_set_halign(fa_center);
draw_set_color(c_white);
draw_set_font(font_30);
draw_text(x,1070+45,txt_nofriends[2]);
} else if mode = 3 {//нужен вход, есть фейсбучная кнопка
draw_set_valign(fa_middle);
draw_set_halign(fa_center);
draw_set_color(c_white);
draw_set_font(font_30);
draw_text(x,875,txt_nofriends[4]);
}   
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
