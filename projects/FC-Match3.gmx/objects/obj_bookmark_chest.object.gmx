<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_chest_plash</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed=0;

x_shift=0
y_shift=0;
target=0;
chest_index = 1;
chest_time=4;
chest_tier = 1;
chest_sprite = sp_chest;
chest_open_cost=45; //цена открыть сейчас 
state=0;
//0 - closed
//1 - opening in process
//2 - opened 
chest=0;
th=0;//время, часы мин сек
tm=0;
ts=0;
sec=60/room_speed;
/*var op=random_range(0,100);
if op&lt;=50 state=0;
else if op&gt;50 and op&lt;75 state=1;
else if op&gt;75  state=2;*/

tit[0]=mtf.l_book[4,1];
tit[1]=mtf.l_book[4,2];
tit[2]=mtf.l_book[4,3];

image = 0; //sp_bookmark_upgrade_icon
//sp_bookmark_upgrade_iconback

//colors
cc_yellow=make_color_rgb(251,192,72);
cc_yellow2=make_color_rgb(255,234,59);
cc_shadow1=make_color_rgb(80,2,0);
cc_shadow2=make_color_rgb(6,22,6);
cc_shadow3=make_color_rgb(46,8,9);

x_tap=0;
y_tap=0;
//text_surf = surface_create(1024,512);
alarm[0]=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///switch tier
chest_tier=Main.chest_type[chest_index];

switch chest_tier {
case 1: //обычный
chest_sprite = sp_chest;
break;
case 2: //редкий 
chest_sprite = sp_chest_gold;
break;
case 3: //эпический
chest_sprite = sp_chest_epic;
break;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///tap 

var rad=10;

if alarm[1]&gt;0 and mouse_x&gt;=x_tap-rad and mouse_x&lt;=x_tap+rad and mouse_y&gt;=y_tap-rad and mouse_y&lt;=y_tap+rad {
   
Main.chest_focused=chest_index;
Main.chest_focused_tier=chest_tier;
switch state {
case 0: //начать открывать    --- obj_button ---  15
    scr_show_bluring_menu(3,0)
break;
case 1: //открыть сейчас
    if Main.gems &gt;= chest_open_cost { //хватает камней
        //спрашиваем, хочешь ли потратить
        scr_show_bluring_menu(5,2);
    } else {//не хватает камней
        //попап про купить камней
        scr_show_bluring_menu(5,0);
    } 
break;
case 2: //готово
    //анимация вылезания предмета из сундука
    scr_show_bluring_menu(6,0);
break;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x_tap=mouse_x;
y_tap=mouse_y;

alarm[1]=room_speed;




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x=target.x+x_shift;
y=target.y+y_shift;
draw_sprite(sprite_index,state,x,y);


draw_set_color(c_white);
draw_set_valign(fa_middle);
draw_set_halign(fa_center);

switch state {
case 0: //закрыто
draw_set_font(font_27);
draw_text(x,y+117,tit[state]);
draw_sprite(chest_sprite,chest,x,y);
break;

case 1: //открывается
ts-=sec/60;
th=ts div 3600;
tm=(ts-(th*3600)) div 60;
if ts&lt;=0 {
    state=2;
    //записать его сундучье время и сохранить
    Main.chest_time[chest_index]=2;
    scr_save();
}

chest_open_cost=ceil(ts/3600*6);

draw_sprite(chest_sprite,chest,x,y-25);
draw_set_color(c_white);
draw_set_font(font_23);
draw_set_color(cc_yellow2);
draw_text(x,y+80,tit[state]);
draw_sprite(sp_icons,0,x+40,y+134);
draw_sprite(sp_icons,5,x-120,y-144);
draw_set_color(c_white);
draw_set_halign(fa_right);
draw_set_font(font_30);
draw_text(x+5,y+134,chest_open_cost);
draw_set_font(font_27);
draw_set_valign(fa_middle);
draw_set_halign(fa_left);
draw_text(x-83,y-144,string(th)+mtf.l_other[0]+string(tm)+mtf.l_other[1]);// время улучшения
break;

case 2: //открыто
draw_set_font(font_30);
draw_sprite(chest_sprite,chest,x,y);
draw_text(x,y+125,tit[state]);
break;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
