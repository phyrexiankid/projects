<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_gameplay_checker</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-30</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>item_index=0;
powerup=0;
target = 0;
turn_to = 0;
check_i=0;
column = 0;
row = 0;

alarm[0]=1;

with obj_item {
if row=0 instance_deactivate_object(id);
}

light_surf = surface_create(room_width,room_height);
ds_list_add(Main.surface_list,light_surf);
//surface_set_target(light_surf);
//draw_clear_alpha(c_black, 0.5);
//surface_reset_target();

list_checker_x=ds_list_create();
list_checker_y=ds_list_create();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_free(light_surf);
instance_activate_object(obj_item);
with obj_checker instance_destroy();
ds_list_destroy(list_checker_x);
ds_list_destroy(list_checker_y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create surface
with obj_powerup {
    if index = other.powerup {
       other.target=id; 
    }
}   

for(var i=0; i&lt;ds_list_size(list_checker_x); i++) {
    var mask = instance_create(x+200*ds_list_find_value(list_checker_x,i),y+180*ds_list_find_value(list_checker_y,i),obj_checker);
    //проверяем что есть рядом в списке шоб узнать форму маски
    //if ds_list_find_index(obj_checker_main.list_checker_x,ds_list_find_value(obj_checker_main.list_checker_x,i)-1)=-1 {mask.image_index=4;}
         if scr_mask_left(i)=0  {mask.image_index=5;}
    else if scr_mask_right(i)=0 {mask.image_index=4;}
    else if scr_mask_up(i)=0    {mask.image_index=2;}
    else if scr_mask_down(i)=0  {mask.image_index=3;}
    
    
    
    /*     if scr_mask_left(i)=0 and scr_mask_right(i)=0 and scr_mask_up(i)=0 and scr_mask_down(i)=0 {mask.image_index=4;}
    else if scr_mask_left(i)=1 and scr_mask_right(i)=1 and scr_mask_up(i)=1 and scr_mask_down(i)=1 {mask.image_index=0;}
    else if scr_mask_left(i)=0 and scr_mask_right(i)=0 and scr_mask_up(i)=1 and scr_mask_down(i)=1 {mask.image_index=0;}
    else if scr_mask_left(i)=1 and scr_mask_right(i)=1 and scr_mask_up(i)=0 and scr_mask_down(i)=0 {mask.image_index=0;}
    else if scr_mask_left(i)=1 and scr_mask_right(i)=0 and scr_mask_up(i)=0 and scr_mask_down(i)=0 {mask.image_index=3;}
    else if scr_mask_left(i)=0 and scr_mask_right(i)=1 and scr_mask_up(i)=0 and scr_mask_down(i)=0 {mask.image_index=3; mask.image_xscale=-1;}
    else if scr_mask_left(i)=0 and scr_mask_right(i)=0 and scr_mask_up(i)=0 and scr_mask_down(i)=1 {mask.image_index=2;}
    else if scr_mask_left(i)=0 and scr_mask_right(i)=0 and scr_mask_up(i)=1 and scr_mask_down(i)=0 {mask.image_index=2; mask.image_yscale=-1;}
    else if scr_mask_left(i)=1 and scr_mask_right(i)=0 and scr_mask_up(i)=1 and scr_mask_down(i)=0 {mask.image_index=1; mask.image_yscale=-1;}
    else if scr_mask_left(i)=1 and scr_mask_right(i)=0 and scr_mask_up(i)=0 and scr_mask_down(i)=1 {mask.image_index=1;}
    else if scr_mask_left(i)=0 and scr_mask_right(i)=1 and scr_mask_up(i)=1 and scr_mask_down(i)=0 {mask.image_index=1; mask.image_xscale=-1; mask.image_yscale=-1;}
    else if scr_mask_left(i)=0 and scr_mask_right(i)=1 and scr_mask_up(i)=0 and scr_mask_down(i)=1 {mask.image_index=1; mask.image_xscale=-1;}
    */
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x=mouse_x;
y=mouse_y;
if target != 0 {
target.x=x;
target.y=y;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_set_target(light_surf);
draw_clear_alpha(c_black, 0.5);
draw_set_blend_mode(bm_subtract);
if powerup &lt;3 { //паверапы 1,2 - подсветка там, где касаемся предметов
with obj_item {
    if instance_position(x,y,obj_checker) {
        draw_sprite(sp_gameplay_mask,instance_nearest(x,y,obj_checker).image_index,x,y);
    }
}
} else { //3,4,5 - подсветка на все поле
draw_set_color(c_white);
draw_rectangle(422,552,1422,1812,0);
}
draw_set_blend_mode(bm_normal); 
surface_reset_target();
if surface_exists(light_surf) draw_surface(light_surf,0,0);
else {
    light_surf = surface_create(room_width,room_height);
    ds_list_add(Main.surface_list,light_surf);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
