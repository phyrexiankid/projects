<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///M A I N

global.pause = 0;
log('gameplay create pause 0');


global.obj=0;
global.combs=0;
Main.dark_items =1;
//цвета
color_mission_circle     = make_color_rgb(115,38,19);
color_white              = make_color_rgb(245,248,237);
color_timeline_on        = make_color_rgb(226,143,135);//make_color_rgb(247,200,147);//make_color_rgb(132,80,102);
color_timeline_off       = make_color_rgb(85,49,61);
color_mission[0] = color_white;
color_mission[1] = color_white;
color_mission[2] = color_white;
cc_red=make_color_rgb(180,29,33);

Main.level_rewarded = 0;
//выясняем базовые значения времени и предметов, добавляем сложность
main_time = (Main.balance_time[Main.level_played]+Main.upgrade[1,0]);
main_items = ceil(Main.balance_items[Main.level_played]/(Main.balance_types[Main.level_played]+1));
scr_level_difficulty(Main.level_played);
Main.time_start=main_time;
main_time*=room_speed;
mission_item = 0;

time_start = main_time;
time_current = time_start;
tmlwidt = 880;
time_proc = 100;
time_speed = 1;
time_proc = 100/time_start*time_current
finished = 0;
next_time_plus=0;
win_on_death=0;
autopause = room_speed*10; //через сколько ставится на паузу если не жать мышью

//какие итемы могут быть на этом уровне - рандом (на одинаковом сиде)
types_list = ds_list_create();
if Main.level_played == Main.level_passed scr_choose_items(id);//если проходишь первый раз
else scr_choose_items_rand(id);//если перепроходишь

//объекты для миссии
mission_index_list=ds_list_create();
mission_num_list=ds_list_create();
var miss_num = Main.balance_types[Main.level_played];
var seed = string((Main.balance_items[Main.level_played]+Main.balance_time[Main.level_played])*11);
if real(string_char_at(seed,1))&lt;5 trn[0]=-1; else trn[0]=1;
if real(string_char_at(seed,2))&lt;5 trn[1]=-1; else trn[1]=1;
if real(string_char_at(seed,3))&lt;5 trn[2]=-1; else trn[2]=1;

for(var i=0; i&lt;miss_num; i++) {
    //число и типы - первые 3(Х) из рандомно-сидового списка
    ds_list_add(mission_index_list,ds_list_find_value(types_list,i)); //добавляем штуки в лист с миссиями
    var anm = main_items;//число предметов/3(Х)
    var add_num_list = round(anm+(anm/100*real(string_char_at(seed,miss_num+1)))*trn[i]);   

    /*ds_list_add(mission_num_list, add_num_list-min(floor(add_num_list/2),Main.upgrade[2,0]));*/ //столько же, в том же порядке в лист с числом предметов
    ds_list_add(mission_num_list, ceil(add_num_list-(add_num_list/2/50*Main.upgrade[2,0])));
}   
mission_surf = surface_create(512,256);
scr_recreate_surf_mission(id);

global.powerup_aim = 0;
global.powerup_num = 0;
global.powerup_activate = 0;

item[5,7]=0;

global.rasst=0;
global.select =-1;
global.select_number = 0;
global.sscore=0;

score_test=0;
time_cur=0;

ver_shift = 180;
randomize();
var way=choose(1,2,3,4,5,6);
var way1=choose(1,2,3,4);
var mlt=2/global.spd;
for(var h=0;h&lt;5;h++) {
    for(var v=-1;v&lt;7;v++) {
        var item=instance_create(523+h*201,633+v*ver_shift,obj_item);
        item.row = v+1;
        item.column = h+1;
        item.ver_shift = ver_shift;
        item.top_cell = 633;
        item.massbounce=1;
        
        //веселый массовый баунс при появлении?
        //выбирается случайно один из нескольких видов
        
        switch way {
        case 1: //из лев. верхнего угла в противоположный и наоборот
            switch way1 {
            case 1: 
            case 2: item.alarm[9]=((item.row*item.column)*2+2)*mlt; break;
            case 3: 
            case 4: item.alarm[9]=((5*7*2)-(item.row*item.column)*2+2)*mlt; break;
            }
        break;
        
        case 2: //от одного края до другого
            switch way1 {
            case 1: item.alarm[9]=(item.row*5+2)*mlt; break;
            case 2: item.alarm[9]=((40)-item.row*5+2)*mlt; break;
            case 3: item.alarm[9]=(item.column*5+2)*mlt; break;
            case 4: item.alarm[9]=((40)-item.column*5+2)*mlt; break;
            }
        break;
        
        case 3: //скрипт спиральки
            scr_itemappear_helix()
        break;
        
        case 4: //просто рандом
            item.alarm[9]=round(random_range(10,45))*mlt;
        break;

        case 5: //скрипт змейки
            scr_itemappear_snake()
        break;    
            
        case 6: //скрипт гарлем шейка
            scr_itemappear_harlem()
        break; 
        }
    }    
}




//PARTICLES ITEMS
part_sys_items = part_system_create()
part_system_depth(part_sys_items, -20 );

part_type_pieces = part_type_create();
part_type_sprite(part_type_pieces,sp_gameplay_particle,1,0,0);
part_type_size(part_type_pieces,0.4,0.6,-0.005*global.spd,0);
part_type_color1(part_type_pieces,128);
part_type_speed(part_type_pieces,5,7,0,0);
part_type_direction(part_type_pieces,0,359,0,0);
part_type_gravity(part_type_pieces,0.9,270);
part_type_orientation(part_type_pieces,0,1,0,0,1);
part_type_blend(part_type_pieces,0);
part_type_life(part_type_pieces,30/global.spd,40/global.spd);

part_type_dust = part_type_create();
part_type_shape(part_type_dust,pt_shape_pixel);
part_type_size(part_type_dust,1,2,0,0);
part_type_speed(part_type_dust,4,8,0,0);
part_type_direction(part_type_dust,0,359,0,0);
part_type_gravity(part_type_dust,1.1,270);
part_type_orientation(part_type_dust,0,1,0,0,1);
part_type_blend(part_type_dust,1);
part_type_life(part_type_dust,20/global.spd,28/global.spd);

//PARTICLES POWERUPS
part_sys_powerup = part_system_create()
part_system_depth(part_sys_powerup, -20 );

part_type_powerup = part_type_create();
part_type_shape(part_type_powerup,pt_shape_disk);
part_type_size(part_type_powerup,0.1,0.2,-0.0005*global.spd,0.05);
part_type_scale(part_type_powerup,1,1);
part_type_color1(part_type_powerup,16777215);
part_type_alpha3(part_type_powerup,1,0,1);
part_type_speed(part_type_powerup,0.50,1,0,0);
part_type_direction(part_type_powerup,100,359,0,0);
part_type_gravity(part_type_powerup,0.2,270);
part_type_orientation(part_type_powerup,0,0,0,0,1);
part_type_blend(part_type_powerup,0);
part_type_life(part_type_powerup,60/global.spd,120/global.spd);

part_sys_finger = part_system_create()
part_system_depth(part_sys_finger,-100);
part_type_finger = part_type_create();
part_type_shape(part_type_finger,pt_shape_disk);
part_type_size(part_type_finger,0.1,0.2,-0.0005*global.spd,0.05);
part_type_scale(part_type_finger,1,1);
part_type_color1(part_type_finger,16777215);
part_type_alpha3(part_type_finger,1,0,1);
part_type_speed(part_type_finger,0.50,1,0,0);
part_type_direction(part_type_finger,100,359,0,0);
part_type_gravity(part_type_finger,0.2,270);
part_type_orientation(part_type_finger,0,0,0,0,1);
part_type_blend(part_type_finger,0);
part_type_life(part_type_finger,60/global.spd,120/global.spd);
part_type_color1(part_type_finger,c_white/*make_color_rgb(255,236,24)*/);
emitter_finger = part_emitter_create(part_sys_finger);


//обратный отсчет 3 сек в начале
var timer=instance_create(room_width/2,room_height/2,obj_countdown);
timer.progress = -1;//-1 вниз, 1 вверх
timer.count = 3; //такой отсчет
timer.target_count = 0; //к чему идем
timer.text = 'Go!'; //если не '', то этот текст показывается вместо нуля
timer.final_timer=1;
timer.with_pause=1;

Main.powerup_level[1] = Main.upgrade[10,0];
Main.powerup_level[2] = Main.upgrade[11,0];
Main.powerup_level[3] = Main.upgrade[12,0];
Main.powerup_level[4] = Main.upgrade[13,0];
Main.powerup_level[5] = Main.upgrade[14,0];

powerup_used[1]=0;
powerup_used[2]=0;
powerup_used[3]=0;
powerup_used[4]=0;
powerup_used[5]=0;

pause = instance_create(1349,324,obj_button);
pause.index=-1;


log(fps)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*time_current+=next_time_plus;
log('TIME pllus = '+string(next_time_plus));
log('TIME CURRENT = '+string(time_current));
next_time_plus=0;
*/

log('PAUSE ALARM 11 = ' + string(global.pause));
log('TIME PLUS ALARM 11 = '+string(Main.next_time_bonus));
time_current+=Main.next_time_bonus;
log('TIME CURRENT ALARM 11 = '+string(time_current));
Main.next_time_bonus=0;


global.pause=0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// уровень пройден 
    if Main.level_played == Main.level_passed {
        Main.level_passed+=1;
        if Main.level_passed mod 30=0 and Main.eat_available&lt;10 Main.eat_available+=1; 
        
        //если пройти уровень нужно для квеста
        for(var i=0;i&lt;3;i++) {
            if Main.quest_type[i]=10 {
                //прошел, +1 и сохранить
                Main.quest_progress[i]+=1;
            }   
        }
        
        scr_save();
        //сохраняем в гугловском лидерборде
        //'CgkIrMeq8roWEAIQAQ'
        //leaderboardFeedThePigGlobalRating
        //Feed the Pig Global Rating
        if achievement_login_status() {
        achievement_post_score('CgkIrMeq8roWEAIQAQ', Main.level_passed);
        //achievement_post_score('leaderboardFeedThePigGlobalRating', Main.level_passed);
        achievement_post_score('Levels Leaderboard', Main.level_passed);}
        //аналитика - пройден новый уровень
        GoogleAnalytics_SendEventExt('Gameplay','Level passed','New level',Main.level_played);
        //кидаем запрос на фейсбучный скор
        var str = string("method=POST&amp;score="+string(Main.level_passed)+"&amp;access_token=251484648699009|ZC6uFCPFmnhtHVgUnotWmr76VDI");
        http_post_string("https://graph.facebook.com/"+string(facebook_user_id())+"/scores", str);
    } else {
        //аналитика - уровень перепройден
        GoogleAnalytics_SendEventExt('Gameplay','Level passed','Level replayed',Main.level_played);
    }
    
    //аналитика - сколько заюзано паверапов
    if powerup_used[1]&gt;0 GoogleAnalytics_SendEventExt('Gameplay','Use powerup','Powerup_Muhsroom',powerup_used[1]);
    if powerup_used[2]&gt;0 GoogleAnalytics_SendEventExt('Gameplay','Use powerup','Powerup_Cross',powerup_used[2]);
    if powerup_used[3]&gt;0 GoogleAnalytics_SendEventExt('Gameplay','Use powerup','Powerup_Bees',powerup_used[3]);
    if powerup_used[4]&gt;0 GoogleAnalytics_SendEventExt('Gameplay','Use powerup','Powerup_Clock',powerup_used[4]);
    if powerup_used[5]&gt;0 GoogleAnalytics_SendEventExt('Gameplay','Use powerup','Powerup_Freeze',powerup_used[5]);
 
    scr_music_resume();
    scr_music_unsupress(1);
    
    scr_show_bluring_menu(15,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Item Fall Alarm

with obj_item {
    if visible=0 and row !=0 {
        alarm[6]=1;
    }
}

if finished = 1 {
    global.pause = 1 
    alarm[10]=1;//room_speed*3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///mission color 2

color_mission[2] = color_white;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///mission color 1

color_mission[1] = color_white;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///mission color 0

color_mission[0] = color_white;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///column 5 timer

scr_spawn_item(5);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///column 4 timer

scr_spawn_item(4);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///column 3 timer

scr_spawn_item(3);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///column 2 timer

scr_spawn_item(2);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///column 1 timer

scr_spawn_item(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Powerup release
if mouse_check_button_released(mb_left) {
    
    //проверка на использование паверапов
    if global.powerup_aim = 1 {
        
        
        var inear = instance_nearest(mouse_x,mouse_y,obj_item);
        if point_distance(mouse_x,mouse_y,inear.x,inear.y)&lt;=250 and (mouse_x&gt;422 and mouse_y&gt;552 and mouse_x&lt;1422 and mouse_y&lt;1812) {
            if global.powerup_num = 1 {        //ГРИБ
                scr_powerup_grib_release(id);
                scr_music_unsupress(1);
            } else if global.powerup_num = 2 { //КРЕСТ НАКРЕСТ
                scr_powerup_cross_release(id);
                scr_music_unsupress(1);
            } else if global.powerup_num = 3 { //МОТЫЛЬКИ
                scr_powerup_flying_release(id);
                scr_music_unsupress(1);
            } else if global.powerup_num = 4 { //СЛОУМО
                scr_powerup_slomo_release(id);
            } else if global.powerup_num = 5 { //ЗАМОРОЗКА
                scr_powerup_freeze_release(id);
            } 
            powerup_used[global.powerup_num]+=1;
            /*
            Гриб:
            Меняет 4 иконки рядом с той на который применили гриб (делает их такимиже)
            при улучшении гриба меняет 8, можено ещё раз улучшить так чтобы менядо 12

            Крестик:
            уничтожвет иконки крестиком
            сначала 5, при улучщении: 9, 13, 17, 21, 25,29

            Мухи:
            Желает одну из иконок(рандомно) улучшенной
            при улучшении мух становится больше
            2,3,4,5,6,7

            Время:
            Замедляет время в два раза не несколько секунд
            сначала на 10, после улучшений:15,20,25,30,35,40 (или както так)


            Заморозка времени:
            замораживает время на 3 хода.
            послк улучщения на 4,5,6,7,8,9,10
            */
        } else {
            scr_powerup_clean();
            scr_music_unsupress(1);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///What's selected

if global.pause = 0 {
//время уменьшается
if time_current&gt;0 time_current-=time_speed;
/*if time_current &gt;= time_start time_current=time_start;
else*/ if time_current &lt;= 0 and win_on_death=0 {

    if scr_check_on_death()=0 {
        log('DEATH. TIME CURRENT = '+string(time_current));
        //time_current=0;
        Main.lose_item[0,0]=-1;
        Main.lose_item[0,1]=-1;
        Main.lose_item[1,0]=-1;
        Main.lose_item[1,1]=-1;
        Main.lose_item[2,0]=-1;
        Main.lose_item[2,1]=-1;
        Main.lose_size = ds_list_size(mission_index_list);
        for(var i=0;i&lt;Main.lose_size;i++) {
            Main.lose_item[i,0]=ds_list_find_value(mission_index_list,i);
            Main.lose_item[i,1]=ds_list_find_value(mission_num_list,i);;
        }
        scr_music_resume();
        scr_show_bluring_menu(17,0);
    } else {
        win_on_death=1;
        scr_check_combo()
       
    }
    
}
time_proc = 100/time_start*time_current;
//(time_current div (time_start/100))/100;

if mouse_check_button(mb_left)
{
scr_autopause();
//cистема частиц от пальца
part_emitter_region(part_sys_finger,emitter_finger,mouse_x-40,mouse_x+40,mouse_y-40,mouse_y+40,0,0);
part_emitter_burst(part_sys_finger,emitter_finger,part_type_finger,1);
if instance_position(mouse_x,mouse_y,obj_item) {
    with instance_nearest(mouse_x,mouse_y,obj_item) {
    if fall=0 and row!=0 {
        //передвигаем стрелки на последний?
        if global.select = -1 and global.powerup_aim = 0 {//ничего еще не выбрано
            //if global.sound = 1 audio_play_sound(snd_select, 1, 0);/////////
            global.select = index;
            global.select_number = 1;
            scr_item_snd(global.select_number);
            scr_move_item_up(id);
        } else if global.select != -1{//если уже что-то выбрано
            if global.select = index and selected=0 and row!=0 {//если выбрано новое нужного типа
                with(obj_item) {
                    active=1;
                    if last_selected=1 {
                        if (other.row=row and other.column=column-1) or (other.row=row+1 and other.column=column-1) or (other.row=row-1 and other.column=column-1) or (other.row=row and other.column=column+1) or (other.row=row+1 and other.column=column+1) or (other.row=row-1 and other.column=column+1) or (other.row=row+1 and other.column=column) or (other.row=row-1 and other.column=column)
                        {
                            global.select_number += 1;
                            scr_item_snd(global.select_number);
                            scr_move_item_up(other.id);
                            //line
                            var linesh = 15+Main.itemshift[global.select];
                            var line=instance_create(other.x,other.y+linesh,obj_line);
                            line.image_xscale=1/256*point_distance(other.x,other.y+linesh,x,y+linesh);
                            line.image_yscale=1.2;//256*point_distance(other.x,other.y+linesh,x,y+linesh);
                            line.image_angle=point_direction(other.x,other.y+linesh,x,y+linesh);
                            line.selected_num = global.select_number;
                            last_selected=0;   
                            //перевешиваем его стрелку на новый (если есть стрелка)
                            if effect_destroy_row!=0 {
                                var whites=0;
                                var firstt=0;
                                var newt=instance_nearest(mouse_x,mouse_y,obj_item);
                                with obj_item_white { 
                                if target=newt { 
                                    if whites = 0 {        //если 0-стало 1, с ним все норм
                                        //ниче не делаем? 
                                        firstt=image_angle;
                                    } else if whites = 1 { //если 1 - стало 2, проверить ось и включить другую
                                        if firstt=0 image_angle=90;
                                        else image_angle=0;
                                    } else if whites &gt;=2 { //если &gt;=2 - стало &gt;2, делаем активейт=0
                                        active=0; //тут уже дофига, эта просто не будет учитываться. главное потом включать такие
                                    }
                                    whites+=1;
                                }
                                if target=other {
                                    //проверить, сколько на новом теперь навешано:
                                    if whites = 0 {        //если 0-стало 1, с ним все норм
                                        //ниче не делаем? 
                                        firstt=image_angle;
                                    } else if whites = 1 { //если 1 - стало 2, проверить ось и включить другую
                                        if firstt=0 image_angle=90;
                                        else image_angle=0;
                                    } else if whites &gt;=2 { //если &gt;=2 - стало &gt;2, делаем активейт=0
                                        active=0; //тут уже дофига, эта просто не будет учитываться. главное потом включать такие
                                    }
                                    whites+=1;
                                    if real_target = 0 { //если стрелка изначально его
                                        real_target=other.id;//стрелка знает, куда вернуться
                                        real_angle=other.effect_destroy_row;}//и каким градусом быть
                                    var newt=instance_nearest(mouse_x,mouse_y,obj_item);
                                    target=newt;//стрелка перевешивается на последний
                                    y=newt.y;
                                    x=newt.x;
                                }}
                                //с новым:
                                other.effect_destroy_row=effect_destroy_row;
                                white=0;//у предыдущего стрелка обнуляется
                                effect_destroy_row=0;//..и он прикидывается, что на нем ниче нет  
                            }
                        }
                    }
                }
            //если выбрано предпоследнее - отошли на шаг назад         
            } else if global.select = index and selected=1 and selected_num=global.select_number-1 {
                
                global.select_number-=1;
                
                scr_item_snd(global.select_number);
                
                with(obj_item) {
                    if last_selected=1 {
                        scr_move_item_down(id); 
                        //destroy this line
                        with obj_line {
                            if selected_num = global.select_number+1 instance_destroy();
                        }
                        //если на нем висит не его вайт, сдвинуть его на предыдущий
                        if effect_destroy_row!=0 {
                                var whites=0;
                                var old_white=0;
                                var firstt=0;
                                var newt=instance_nearest(mouse_x,mouse_y,obj_item);
                                with obj_item_white { active=1; if target=other {//те, что висят на итеме с которого мы сошли
                                    if real_target=other {//тот, что на нем реально висел, остается на нем
                                        newt.effect_destroy_row = real_angle;
                                        target = real_target;
                                        real_target = 0;
                                        real_angle  = 0;
                                        y=target.y;
                                        x=target.x;
                                        old_white+=1;
                                    } else if real_target=0 {
                                        old_white+=1;
                                    } else { // остальные валятся на предыдущий, куда мы отошли
                                        //проверить, сколько на новом теперь навешано:
                                        if whites = 0 {        //если 0-стало 1, с ним все норм
                                            //ниче не делаем? 
                                            firstt=image_angle;
                                        } else if whites = 1 { //если 1 - стало 2, проверить ось и включить другую
                                            if firstt=0 image_angle=90;
                                            else image_angle=0;
                                        } else if whites &gt;=2 { //если &gt;=2 - стало &gt;2, делаем активейт=0
                                            active=0; //тут уже дофига, эта просто не будет учитываться. главное потом включать такие
                                        }
                                        whites+=1
                                        if real_target = newt { //если стрелка изначально его
                                            newt.effect_destroy_row=real_angle;
                                            real_target=0;
                                            real_angle=0;
                                            target=newt;
                                            y=target.y;
                                            x=target.x;
                                        } else {
                                            target=newt;//стрелка перевешивается на последний
                                            y=target.y;
                                            x=target.x;
                                            target.effect_destroy_row=real_angle;
                                        }
                                    }

                                }} 
                                //теперь если на старом ничего нет - обнулить его 
                                if old_white=0 and whites=0{
                                    effect_destroy_row=0;
                                } 
                            }

                        /*if effect_destroy_row!=0 {
                            if white.real_target != 0 {
                                //то куда мы теперь перешли - его реал таргет или еще нет?
                                if white.real_target=other {//это и есть реал таргет-все сбрасывается
                                    with white {
                                        with real_target {
                                            effect_destroy_row = other.real_angle
                                            white=other.id;
                                        }
                                        target = real_target;
                                        real_target = 0;
                                        real_angle  = 0;
                                        y=target.y;
                                        x=target.x;
                                    }                                  
                                    effect_destroy_row=0;
                                    white=0;
                                } else {//еще не реал таргет - меняем только текущий таргет
                                    white.target = other;
                                    white.y=other.y;
                                    white.x=other.x;   
                                    other.effect_destroy_row = white.real_angle
                                    other.white=white;                            
                                    effect_destroy_row=0;
                                    white=0;
                                }
                            }
                        }*/
                    }
                }
                last_selected=1;
            }
        }
    }
    }
    
}
} else if mouse_check_button_released(mb_left) { //  КОНЕЦ КОМБЫ, ПРОВЕРКА
    scr_autopause();
    scr_check_combo();
}
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Main.alarm[8]=-1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//сюрфейс облачка миссий
if surface_exists(mission_surf) draw_surface(mission_surf,obj_quest_cloud.x,obj_quest_cloud.y);
else scr_recreate_surf_mission(id);

//цифры сколько предметов осталось для миссии
draw_set_valign(fa_center);
draw_set_halign(fa_middle);
draw_set_font(font_27);
var size=ds_list_size(mission_index_list);
for(var i=0; i&lt;size; i++) {
draw_set_color(color_mission[i]);
draw_text(obj_quest_cloud.x+294-(rast*(size-1))/2+(rast*i)+45,obj_quest_cloud.y+124+47,ds_list_find_value(mission_num_list,i));
}

/*draw_set_color(c_red);
draw_set_valign(fa_center);
draw_set_halign(fa_left);
draw_text(view_xview[0]+100,30,string('fps= ')+string(fps)+string('/')+string(fps_real));
draw_text(view_xview[0]+100,65,global.combs);
*/

//время - картинка часов и полоска
var shir = 6;
draw_sprite(sp_gameplay_clock,0,490,106);
draw_set_color(color_timeline_off);
draw_roundrect(519,105-shir,519+tmlwidt,109+shir,0);
draw_set_color(color_timeline_on);
draw_roundrect(519,105-shir,519+tmlwidt/100*time_proc,109+shir,0);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="109">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Main.powerup_level[1] -= 1;
Main.powerup_level[2] -= 1;
Main.powerup_level[3] -= 1;
Main.powerup_level[4] -= 1;
Main.powerup_level[5] -= 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="107">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Main.powerup_level[1] += 1;
Main.powerup_level[2] += 1;
Main.powerup_level[3] += 1;
Main.powerup_level[4] += 1;
Main.powerup_level[5] += 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//instance_create(mouse_x,mouse_y,obj_explosion);
//alarm[10]=1;

time_current=60*3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//scr_show_bluring_menu(0,0)


scr_show_bluring_menu(17,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
