<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_stats_share</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>azaza = 0;

ymi=sprite_get_height(sp_main_plash)/2;

num = 0;
list_number = 0;
hor = 0;
vert = 0;

minor_check1 = view_hview[0]/2-1200;
minor_check2 = view_hview[0]+100;
minor_check3 = view_xview[0]+view_wview[0]/2-450;
minor_check4 = obj_shop.y+1300;

ach_sprite = sp_achiev_1;
ach_image = 0;
ach_upgrade = 0;
ach_name = "";
ach_description = "";
ach_preff = '';
ach_num = 0;

mmin = 0.09;
press = 0;
press_x = 0;
press_y = 0;

unlocked = 0;
cover_color = make_color_rgb(30,30,30);

//alarm[0]=1;

//creating achievements
/*hhor=1; 
vvert=1;
ds_list_clear(save_achiev_list);
var l = 0;
for(l=0;l&lt;4;l++)
{
var an = instance_create(x,y,obj_achiev_tab);
an.num = l+1;
ds_list_add(save_achiev_list,l+1,0);
}
*/
checker = 0;
a=0;
b=0;
aa=0;
bb=0;

alarm[0]=2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if mouse_x &gt; press_x-5 and mouse_x &lt; press_x+5 and mouse_y &gt; press_y-5 and mouse_y &lt; press_y+5 {

    if mouse_x &gt; (view_xview[0]+view_wview[0]/2-589) and mouse_x &lt; (view_xview[0]+view_wview[0]/2-589)+170*6+75 {
    if mouse_y &gt; view_hview[0]/2+10 and mouse_y &lt; view_hview[0]/2+75+170*14{
        
    aa = round((mouse_x-(view_xview[0]+view_wview[0]/2-589))/170);
    bb = round((mouse_y-(obj_shop.y+1300))/170);
    
    with (obj_achiev_tab) {
        if sur_num = (other.aa+other.bb*6) {
        
            var popup = instance_create(0,0,obj_achiev_popup_check);
            popup.achiev_sprite = ach_sprite;
            popup.achiev_image = ach_image;
            popup.achiev_name = ach_name;
            popup.achiev_description = ach_description;
            popup.unlocked = unlocked;
            popup.achiev_upgrade = ach_upgrade;
            popup.achiev_preff = ach_preff;
            popup.achiev_num=ach_num;

            if global.sound = 1{
                var snd = snd_8bit_back;
                audio_play_sound(snd, 1, 0);
                audio_sound_pitch(snd, random_range(0.9,1.1));
        
            }
        }
        }
    }
}
}
press_y=0;
press_x=0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///drowing surface

if !surface_exists(obj_controller.achiev_surf){
    obj_controller.achiev_surf = surface_create(1024, 1024);//1080, 3000
    obj_controller.achiev_surf1 = surface_create(1024, 1024);
    obj_controller.achiev_surf2 = surface_create(1024, 1024);
} else {
    surface_free(obj_controller.achiev_surf);
    surface_free(obj_controller.achiev_surf1);
    surface_free(obj_controller.achiev_surf2);
    obj_controller.achiev_surf = surface_create(1024, 1024);
    obj_controller.achiev_surf1 = surface_create(1024, 1024);
    obj_controller.achiev_surf2 = surface_create(1024, 1024);
}

a=0;
b=0;
a1=0;
b1=0;
a2=0;
b2=0;

surface_set_target(obj_controller.achiev_surf);//drawing achievs
for (b = 0; b &lt; 6; b++;)
{
    for (a = 0; a &lt; 6; a++;)
    {
        checker = (a+1)+b*6;
        with obj_achiev_tab{
            if sur_num = other.checker{
                //draw_sprite_ext(sp_stats_share2,0,90+180*(other.a),280+180*(other.b),1,1,0,noone,2);
                //draw_sprite_ext(ach_sprite,ach_image,90+180*(other.a),280+180*(other.b),1,1,0,cover_color,1);
                draw_sprite_ext(sp_stats_share2,0,85+170*(other.a),85+170*(other.b),.95,.95,0,noone,2);
                draw_sprite_ext(ach_sprite,ach_image,85+170*(other.a),85+170*(other.b),.95,.95,0,cover_color,1);
                if ach_upgrade &gt;= 1 draw_sprite_ext(sp_achiev_upgrade_nums,ach_num,85+170*(other.a),85+170*(other.b),1,1,0,cover_color,1);
            }
        }
    }
}
surface_reset_target();

surface_set_target(obj_controller.achiev_surf1);//drawing achievs
for (b1 = 0; b1 &lt; 6; b1++;)
{
    for (a1 = 0; a1 &lt; 6; a1++;)
    {
        checker = (a1+1)+b1*6+36;
        with obj_achiev_tab{
            if sur_num = other.checker{
              
                draw_sprite_ext(sp_stats_share2,0,85+170*(other.a1),85+170*(other.b1),.95,.95,0,noone,2);
                draw_sprite_ext(ach_sprite,ach_image,85+170*(other.a1),85+170*(other.b1),.95,.95,0,cover_color,1);
                if ach_upgrade &gt;= 1 draw_sprite_ext(sp_achiev_upgrade_nums,ach_num,85+170*(other.a1),85+170*(other.b1),1,1,0,cover_color,1);
            }
        }
    }
}
surface_reset_target();

surface_set_target(obj_controller.achiev_surf2);//drawing achievs
for (b2 = 0; b2 &lt; 2; b2++;)
{
    for (a2 = 0; a2 &lt; 6; a2++;)
    {
        checker = (a2+1)+b2*6+72;
        with obj_achiev_tab{
            if sur_num = other.checker{
              
                draw_sprite_ext(sp_stats_share2,0,85+170*(other.a2),85+170*(other.b2),.95,.95,0,noone,2);
                draw_sprite_ext(ach_sprite,ach_image,85+170*(other.a2),85+170*(other.b2),.95,.95,0,cover_color,1);
                if ach_upgrade &gt;= 1 draw_sprite_ext(sp_achiev_upgrade_nums,ach_num,85+170*(other.a2),85+170*(other.b2),1,1,0,cover_color,1);
            }
        }
    }
}
surface_reset_target();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.screen = 3 {
if device_mouse_check_button_pressed(0,mb_left) and global.popup_open = 0 {
    press_x = mouse_x;
    press_y = mouse_y;
} else if device_mouse_check_button_released(0,mb_left){
    if global.popup_open = 0 alarm[1]=1;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.screen = 3 {
if obj_controller.to_shop = 0 {
if surface_exists(obj_controller.achiev_surf) {
draw_surface_part(obj_controller.achiev_surf, 0, -obj_shop.y-180,       1024, 1024, view_xview[0]+view_wview[0]/2-512, view_hview[0]/2);
draw_surface_part(obj_controller.achiev_surf1, 0, -obj_shop.y-180-1024, 1024, 1024, view_xview[0]+view_wview[0]/2-512, view_hview[0]/2);
draw_surface_part(obj_controller.achiev_surf2, 0, -obj_shop.y-180-2048, 1024, 1024, view_xview[0]+view_wview[0]/2-512, view_hview[0]/2);
}
else alarm[0]=1;
}
}

//draw_text(room_width/2,room_height/2+20,string(aa)+string(' ')+string(bb));

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_free(obj_controller.achiev_surf);
obj_controller.achiev_surf = surface_create(1024, 2048);

surface_set_target(obj_controller.achiev_surf);//drawing achievs
for (var a = 0; a &lt; 6; a++;)
{
    for (var b = 0; b &lt; 14; b++;)
    {
        draw_sprite_ext(sp_stats_share,0,100+180*a,100+180*b,1,1,0,noone,1);
        draw_sprite_ext(sp_achiev_1,7,   100+180*a,100+180*b,1,1,0,cover_color,1);
        
    }
}
surface_reset_target();

azaza=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
