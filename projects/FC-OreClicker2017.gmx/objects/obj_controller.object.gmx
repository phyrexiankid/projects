<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///M A I N
facebook_init();

//aspect ratio

best_graph= 1;

if os_type!= os_windows and os_type!= os_win8native{
    if os_type= os_android {
        if os_version&gt;= 19 best_graph= 1;
    }
application_surface_enable(false);
var dw = display_get_width();
var dh = display_get_height();
var ratio = dh/dw;
var www = round(2048/ratio);
view_wview[0]=www;
view_wport[0]=www;
var sooot = (2048-www)/2;
view_xview[0]= round(sooot - (sooot)/28);
}

//ADS - AD COLONY
global.AppId = "app665731e2de5540e380";
global.ZoneId = "vz76e8ba0fb0a84c0db8";//вообщето это третья
global.ZoneId2 = "vzd9d0699def034cecbb";//вообщето это вторая
global.ZoneId3 = "vz8ce7dbd0e0e944ca85";//вообщето это первая
global.V4VCZoneId = "vz8ce7dbd0e0e944ca85";
AdColony_Init(global.AppId, global.ZoneId, global.V4VCZoneId);
//ADS - ADMOB
GoogleMobileAds_Init('ca-app-pub-8625657083780151/4055305227');
GoogleMobileAds_LoadInterstitial();

device_mouse_dbclick_enable(false); //disable double tap as right click
        
alarm[4]=10;

ore_color_0 =  make_color_rgb(187,187,187);
ore_color_1 =  make_color_rgb(255,147,51);
ore_color_2 =  make_color_rgb(95,197,209);
ore_color_3 =  make_color_rgb(151,171,196);
ore_color_4 = make_color_rgb(100,234,112);
ore_color_5 =  make_color_rgb(194,213,218);
ore_color_6 =  make_color_rgb(224,26,26);
ore_color_7 =  make_color_rgb(254,209,19);
ore_color_8 = make_color_rgb(63,225,194);

 
ore_count_0 = 0;
ore_count_1 = 0;
ore_count_2 = 0;
ore_count_3 = 0;
ore_count_4 = 0;
ore_count_5 = 0;
ore_count_6 = 0;
ore_count_7 = 0;
ore_count_8 = 0;

//руда
ore = 0;
ore_color = make_color_rgb(255,147,51);
ore_picture = 1;
ore_press = 0;
ore_press_sieze = 1;
ore_light_sieze = 1; 
ore_name = '';
ore_sec = 0;

to_shop = 0;
up_mode = 0;
up_mode2 = 0;
up_mode3 = 0;
to_main = 0;
backx = 1;
//основные
global.sound = 1;
global.ore_count = 0;
global.ore_per_second = 0;
global.ore_per_click = 1;
global.mult = 60/room_speed;    // множитель или делитель кадров в секунду
global.second = 60/global.mult;
global.sperc = 5;  // процент, на который дорожают покупки
global.uperc = 10;  // колечество раз, на которое дорожают апгрейды
global.pperc = 20;  // процент от р.п.с предмета к р.п.т после покупки предмета 
global.costmod = 1; // cрезатель нулей в больших цифрах после перехода на новую руду
global.screen = 0;  //0-main, 1-shop, 2-upgrades, 3-stats
global.shop_items_number = 50;
global.popup_open = 0;
global.boost_mode = 0;
global.max_click_num = 1;
global.compens = 0;
global.base_click = 1;
global.add_click = 0;
max_base_click = 5;
lvl_base_click = 0;
baseClickUpgradeExists= 0;
first_share = 0;
fb_login = 0;
switch (os_get_language())
    {
    case "ru": global.language = 'ru'; break;
    default: global.language = 'en'; break;
    }
// статистика
ore_count_all = 0;
ore_count_hand = 0;
ore_count_auto = 0;
ore_count_clicks = 0;
unic_items = 0;
own_items = 0;
own_upgrades = 0;
own_global_upgrades = 0;
max_bonus = 0;
play=0;


// приближение и проценты
closing_taps = 20;///////////////////20
closing_on = 0; //0 - ничего, 1 - растет, 2 - уменьшается
closing_tonext = 0;
closing_tonext_max = 3*60/global.mult;
closing_pers_amount = 0.01;
closing_pers = 0;
closing_pers_max = 9999;
closing_range = 0; //приближение картинки
closing_cooldown = 0;
closing_cooldown_max = (60/global.mult)/2;
closing_downspeed = 1;
closing_amount = 0;
closing_pers_mod = 0; //cколько отнимать от 20 (1 процент за 20 кликов, отнимается после первой покупки нового объекта)

//основные шрифты и цвета
main_font = font1;
main_font2 = font2;
main_font3 =  font3;
main_font4 =  font4; //шрифт названий, был 46
main_font6 =  font6;
main_color = make_color_rgb(254,209,20);
main_color_white = make_color_rgb(242,242,215);
main_color_grey = make_color_rgb(119,113,103);
main_color_grey_l = make_color_rgb(195,178,161);
//main_color_ore = make_color_rgb(237,239,208);
main_color_ore = make_color_rgb(237,239,208);

lightning_lenght = view_wview[0]/16;
light_alpha = 0.4;
light_changing = 0.001;
alarm[5]=room_speed*2;

ach_bonus1 = 6;
ach_bonus2 = 15;
test_press = 0;

ore_color = ore_color_0;  
ore_picture = 1;

//режим буста
//global.boost_mode = 0;
boost_mode_lvl[0] = 0;
boost_mode_lvl[1] = 50;
boost_mode_lvl[2] = 100;
boost_mode_lvl[3] = 200;
boost_mode_lvl[4] = 250;
boost_mode_lvl[5] = 500;
boost_mode_perc_num = 0;
boost_time_max = room_speed*2*2;
boost_mode_perc = 0;
boost_time = 0;
boost_restoration = room_speed*60*2;

mnmult = 12/global.mult;

mn = ((((view_hview[0]-85)-(view_hview[0]/2-200))/mnmult)*1.0);//*1.1
mn1 = ((0.02*2.5)*0.75)/2;
mn2 = ((21*3)*0.75)/2;

background=sp_back_small;//sprite_add("back.png",1,0,0,0,0);
background=sprite_add("back.png",1,0,0,1024,1024);
//background_index[0]=back1;

alarm[3] = 3*room_speed;// автосейв каждый 10 сек

offline_time = 4;     //время в часах, сколько длится 100% доход
offline_income[0]=10; //процент от дохода когда гномы не работают
offline_income[1]=100;//процент от дохода когда гномы работают
offline_last=date_current_datetime();

/*
изначально в оффлайне давался 100% доход на протяжении часов 4х, 
а потом падало до 10% на все остальное время. и количество этих часов уже прокачивалось бы где то до 2 суток
и по истечению времени с большим доходом приходил пуш "гномам нужен волшебный пендель"
*/



/*
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAh0HZiDpakPZZVE31kxpJtq4YiKi3kotkmAif+hZ6nTVIZBJow98BO6iH5AC8wh1DIv1GV+X6R2RivMvc9xUYF8vC02xDP2TwBdnMxdfStBfqr4UpRAO2H1Ad+x2tCG3JysJIkGY9fWGW3SpUbC/Vc4Ktx2UjxxXBUgR4lXKXU3aO0elBUygMnpMLFWXNn1tTwbZyvLU6ys5rXWbP7uk3G7JlyZLQzKQtYZ8Ok2yOVkXhv9e6ZK9SkV/dr5qpjgw85jIVoocm+ZYgxCIYp1wP2Au1xXqWX8crV4EnN64iXidU44l4NaUEARNHcilAPDpsEskoPBwQGu/X/DvI8erRbwIDAQAB
*/

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// SAVE - LOAD

    if file_exists("data.sav") {
        log('--1--')
        scr_load_main();
    } else {//если нет норм сохранения
        if file_exists('Save.sav')/*-*/ {
        ini_open('Save.sav');/*-*/
        //если есть старый файл сохрангения, грузим из него и сохраняем в новый
        if ini_key_exists('obj_controller','ore')                        ore =                        ini_read_real('obj_controller','ore', 0);
        if ini_key_exists('obj_controller','ore_color')                  ore_color =                  ini_read_real('obj_controller','ore_color', 0);
        if ini_key_exists('obj_controller','ore_picture')                ore_picture =                ini_read_real('obj_controller','ore_picture', 0);
        if ini_key_exists('obj_controller','sound')                      global.sound =               ini_read_real('obj_controller','sound', 1);
        if ini_key_exists('obj_controller','ore_count')                  global.ore_count =           ini_read_real('obj_controller','ore_count', 0);
        if ini_key_exists('obj_controller','ore_per_second')             global.ore_per_second =      ini_read_real('obj_controller','ore_per_second', 0);
        if ini_key_exists('obj_controller','ore_per_click')              global.ore_per_click =       ini_read_real('obj_controller','ore_per_click', 1);
        if ini_key_exists('obj_controller','costmod')                    global.costmod =             ini_read_real('obj_controller','costmod', 1);
        if ini_key_exists('obj_controller','max_click_num')              global.max_click_num =       ini_read_real('obj_controller','max_click_num', 1);
        if ini_key_exists('obj_controller','first_share')                first_share =                ini_read_real('obj_controller','first_share', 0); 
        if ini_key_exists('obj_controller','base_click')                 global.base_click =          ini_read_real('obj_controller','base_click', 1);
        if ini_key_exists('obj_controller','add_click')                  global.add_click =           ini_read_real('obj_controller','add_click', 0);
        if ini_key_exists('obj_controller','max_base_click')             max_base_click =             ini_read_real('obj_controller','max_base_click', 4);
        if ini_key_exists('obj_controller','lvl_base_click')             lvl_base_click =             ini_read_real('obj_controller','lvl_base_click', 0);
        if ini_key_exists('obj_controller','ore_count_all')              ore_count_all =              ini_read_real('obj_controller','ore_count_all', 1);
        if ini_key_exists('obj_controller','ore_count_hand')             ore_count_hand =             ini_read_real('obj_controller','ore_count_hand', 1);
        if ini_key_exists('obj_controller','ore_count_auto')             ore_count_auto =             ini_read_real('obj_controller','ore_count_auto', 1);
        if ini_key_exists('obj_controller','ore_count_clicks')           ore_count_clicks =           ini_read_real('obj_controller','ore_count_clicks', 1);
        if ini_key_exists('obj_controller','unic_items')                 unic_items =                 ini_read_real('obj_controller','unic_items', 1);
        if ini_key_exists('obj_controller','own_global_upgrades')        own_global_upgrades =        ini_read_real('obj_controller','own_global_upgrades', 1);
        if ini_key_exists('obj_controller','own_items')                  own_items =                  ini_read_real('obj_controller','own_items', 1);
        if ini_key_exists('obj_controller','own_upgrades')               own_upgrades =               ini_read_real('obj_controller','own_upgrades', 1);
        if ini_key_exists('obj_controller','max_bonus')                  max_bonus =                  ini_read_real('obj_controller','max_bonus', 1);
        if ini_key_exists('obj_controller','boost_mode_perc_num')        {var prob_boost_mode_perc_num =        ini_read_real('obj_controller','boost_mode_perc_num', 1);
        if prob_boost_mode_perc_num &lt; 6   boost_mode_perc_num  = prob_boost_mode_perc_num;   else boost_mode_perc_num  = 5;}
        if ini_key_exists('obj_controller','boost_mode_perc')            boost_mode_perc =            ini_read_real('obj_controller','boost_mode_perc', 1);
        if ini_key_exists('obj_controller','closing_taps')               closing_taps =               ini_read_real('obj_controller','closing_taps', 20);
        if ini_key_exists('obj_controller','closing_downspeed')          closing_downspeed =          ini_read_real('obj_controller','closing_downspeed', 1);
        //offline
        if ini_key_exists('obj_controller','offline_time')               offline_time =               ini_read_real('obj_controller','offline_time', offline_time);
        if ini_key_exists('obj_controller','offline_income[0]')          offline_income[0] =          ini_read_real('obj_controller','offline_income[0]', offline_income[0]);
        if ini_key_exists('obj_controller','offline_income[1]')          offline_income[1] =          ini_read_real('obj_controller','offline_income[1]', offline_income[1]);
        if ini_key_exists('obj_controller','offline_last')               offline_last =               ini_read_string('obj_controller','offline_last', offline_last);
        ini_close();
        log('--2--')
        scr_save_main();
        } else {
        //ни одного файла нет, делаем новый
        log('--3--')
        scr_save_main();
        }
    
    }
    

    
//-----ПЕРВИЧНОЕ СОХРАНЕНИЕ ШОПА-------
//если нет файла дата сейва

var general_map=ds_map_create();
if file_exists("data.sav") general_map = ds_map_secure_load("data.sav"); 

//если там вдруг есть такая мапа то ниче не делаем???
if is_undefined(ds_map_find_value(general_map,"shop_map")) {

var save_map = ds_map_create();

//shop_upgrade_bonus
save_map[? "sb[1]"]  = 0.1; //shop_upgrade_bonus
save_map[? "sb[2]"]  = 0.5;
save_map[? "sb[3]"]  = 2;//
save_map[? "sb[4]"]  = 10;
save_map[? "sb[5]"]  = 50;
save_map[? "sb[6]"]  = 240; 
save_map[? "sb[7]"]  = 1150;
save_map[? "sb[8]"]  = 5400;
save_map[? "sb[9]"]  = 24800;
save_map[? "sb[10]"] = 115000;

save_map[? "sb[11]"] = 505000;
save_map[? "sb[12]"] = 22000000; //
save_map[? "sb[13]"] = 95000000; 
save_map[? "sb[14]"] = 410000000; 
save_map[? "sb[15]"] = 1700000000; 
save_map[? "sb[16]"] = 7000000000; 
save_map[? "sb[17]"] = 28000000000; 
save_map[? "sb[18]"] = 110000000000; // 
save_map[? "sb[19]"] = 430000000000; 
save_map[? "sb[20]"] = 1600000000000; 

save_map[? "sb[21]"] = 6000000000000; 
save_map[? "sb[22]"] = 22200000000000; 
save_map[? "sb[23]"] = 80000000000000; 
save_map[? "sb[24]"] = 280000000000000; //
save_map[? "sb[25]"] = 1000000000000000; 
save_map[? "sb[26]"] = 3200000000000000;
save_map[? "sb[27]"] = 10450000000000000; 
save_map[? "sb[28]"] = 33500000000000000; 
save_map[? "sb[29]"] = 104500000000000000; 
save_map[? "sb[30]"] = 3200000000000000000;  //

save_map[? "sb[31]"] = 9500000000000000000; 
save_map[? "sb[32]"] = 27000000000000000000; 
save_map[? "sb[33]"] = 75000000000000000000; 
save_map[? "sb[34]"] = 215000000000000000000; 
save_map[? "sb[35]"] = 570000000000000000000; 
save_map[? "sb[36]"] = 1500000000000000000000;  //
save_map[? "sb[37]"] = 3750000000000000000000; 
save_map[? "sb[38]"] = 9000000000000000000000; 
save_map[? "sb[39]"] = 22000000000000000000000; 
save_map[? "sb[40]"] = 50000000000000000000000; 

save_map[? "sb[41]"] = 112000000000000000000000;
save_map[? "sb[42]"] = 2400000000000000000000000;  //
save_map[? "sb[43]"] = 5000000000000000000000000;
save_map[? "sb[44]"] = 10000000000000000000000000; 
save_map[? "sb[45]"] = 19500000000000000000000000; 
save_map[? "sb[46]"] = 35000000000000000000000000; 
save_map[? "sb[47]"] = 63000000000000000000000000;
save_map[? "sb[48]"] = 107000000000000000000000000; //
save_map[? "sb[49]"] = 175000000000000000000000000;
save_map[? "sb[50]"] = 5000000000000000000000000000;    
                                                      
//chop cost 
save_map[? "sc[1]"] =  10;//shop_cost
save_map[? "sc[2]"] =  150;
save_map[? "sc[3]"] =  1000;
save_map[? "sc[4]"] =  5000;
save_map[? "sc[5]"] =  20000;
save_map[? "sc[6]"] =  100000; //
save_map[? "sc[7]"] =  500000;
save_map[? "sc[8]"] =  2500000;
save_map[? "sc[9]"] =  10000000;
save_map[? "sc[10]"] = 50000000;

save_map[? "sc[11]"] = 250000000;
save_map[? "sc[12]"] = 1000000000; //
save_map[? "sc[13]"] = 5000000000;
save_map[? "sc[14]"] = 25000000000; 
save_map[? "sc[15]"] = 100000000000; 
save_map[? "sc[16]"] = 500000000000; 
save_map[? "sc[17]"] = 2500000000000; 
save_map[? "sc[18]"] = 10000000000000; // 
save_map[? "sc[19]"] = 50000000000000; 
save_map[? "sc[20]"] = 250000000000000; 
                                               
save_map[? "sc[21]"] = 1000000000000000; 
save_map[? "sc[22]"] = 5000000000000000; 
save_map[? "sc[23]"] = 25000000000000000; 
save_map[? "sc[24]"] = 100000000000000000; //
save_map[? "sc[25]"] = 500000000000000000; 
save_map[? "sc[26]"] = 2500000000000000000;
save_map[? "sc[27]"] = 10000000000000000000; 
save_map[? "sc[28]"] = 50000000000000000000; 
save_map[? "sc[29]"] = 250000000000000000000; 
save_map[? "sc[30]"] = 1000000000000000000000;  //
                                               
save_map[? "sc[31]"] = 5000000000000000000000; 
save_map[? "sc[32]"] = 25000000000000000000000; 
save_map[? "sc[33]"] = 100000000000000000000000; 
save_map[? "sc[34]"] = 500000000000000000000000; 
save_map[? "sc[35]"] = 2500000000000000000000000;
save_map[? "sc[36]"] = 10000000000000000000000000;  //
save_map[? "sc[37]"] = 50000000000000000000000000;
save_map[? "sc[38]"] = 250000000000000000000000000;
save_map[? "sc[39]"] = 1000000000000000000000000000; 
save_map[? "sc[40]"] = 5000000000000000000000000000;  

save_map[? "sc[41]"] = 25000000000000000000000000000;
save_map[? "sc[42]"] = 100000000000000000000000000000;  //
save_map[? "sc[43]"] = 500000000000000000000000000000;
save_map[? "sc[44]"] = 2500000000000000000000000000000; 
save_map[? "sc[45]"] = 10000000000000000000000000000000; 
save_map[? "sc[46]"] = 50000000000000000000000000000000; 
save_map[? "sc[47]"] = 250000000000000000000000000000000;
save_map[? "sc[48]"] = 1000000000000000000000000000000000;
save_map[? "sc[49]"] = 5000000000000000000000000000000000;
save_map[? "sc[50]"] = 25000000000000000000000000000000000;
            
//shop_upgrade                                           
for(var i=1;i&lt;51;i++) {
  for(var h=0;h&lt;5;h++) {
   if i=50 and h&gt;=1 break;
   save_map[? 'su['+string(i)+','+string(h)+']'] =0;//shop_upgrade
  }
}
    
//obj_upgrade_tab_main
for(var ob = 101; ob&lt;118; ob++){
  save_map[? 'sm['+string(ob)+']' ] =0;//shop_upgrade_main
}

ds_map_add_map(general_map,"shop_map",save_map);
ds_map_secure_save(general_map, "data.sav");
ds_map_destroy(save_map);
}

//var json_encoded=json_encode(save_map);
//file_text_write_string(saveFile,json_encoded);
//file_text_close(saveFile);

ds_map_destroy(general_map);



//ex-alarm 3
/*ini_open('Save.sav');
    ini_write_real('obj_controller','ore_color', ore_color);//1
    ini_write_real('obj_controller','ore_picture', ore_picture);//1
    ini_write_string('obj_controller','language', global.language);
    ini_write_real('obj_controller','sound', global.sound);//1
    ini_write_real('obj_controller','ore_count', global.ore_count);//0
    ini_write_real('obj_controller','ore_per_second', global.ore_per_second);//2
    ini_write_real('obj_controller','ore_per_click', global.ore_per_click);//2
    ini_write_real('obj_controller','costmod', global.costmod);//1
    
    ini_write_real('obj_controller','ore_count_all', ore_count_all);//0, 2
    ini_write_real('obj_controller','ore_count_hand', ore_count_hand);//0, 2
    ini_write_real('obj_controller','ore_count_auto', ore_count_auto);//0, 2
    ini_write_real('obj_controller','ore_count_clicks', ore_count_clicks);//0, 2
    ini_write_real('obj_controller','own_global_upgrades', own_global_upgrades);//3
    ini_write_real('obj_controller','own_items', own_items);//3
    ini_write_real('obj_controller','own_upgrades', own_upgrades);//3
    ini_write_real('obj_controller','max_bonus', max_bonus);//2
    ini_write_real('obj_controller','boost_mode_perc_num', boost_mode_perc_num);//3
    ini_write_real('obj_controller','boost_mode_perc', boost_mode_perc);//3
ini_close();*/





              




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///MTF 

if global.language = 'en'{

l_st_collect =            "Ore mined: ";
l_st_collect_by_hand =    "Mined by hand: ";
l_st_collect_by_auto =    "Mined automatically: ";
l_st_clicks =             "Clicks performed: ";         

l_st_purchases =          "Purchases: ";
l_st_income_per_second =  "Income per second: ";   
l_st_income_per_click =   "Income per tap: ";
l_st_max_bonus =          "Maximum bonus: ";  

l_st_currency =           "Сurrencies: ";
l_st_own_items =          "Unic items: ";       
l_st_own_upgrades =       "Item upgrades: ";    
l_st_own_glob_upgrades =  "Global upgrades: "; 
              

l_st_stats = 'Statistics:';

l_buy_item        = 'Buy ';
l_boost           = "Boost";
l_increases       = "Increases resource extraction speed by ";
l_boost_for       = "Boost for ";
l_minute          = " minutes";
l_sec             = ' sec';
l_persec          = '  per sec.';
l_n_shop          = '    Shop    ';
l_n_upgrades      = ' Upgrades ';
l_n_stats         = '  Stats  ';
l_no_boost        = 'Sorry, no video currently available';
l_switch          = 'Switching to a new currency!';
l_per_tap         = 'per tap';
l_level           = ', level';
l_preparing       = 'Preparing for mining...';

l_ore_name_0 ="Stone";
l_ore_name_1 ="Copper";
l_ore_name_2 ="Topaz";
l_ore_name_3 ="Iron";
l_ore_name_4 ="Emerald";
l_ore_name_5 ="Silver";
l_ore_name_6 ="Ruby";
l_ore_name_7 ="Gold";
l_ore_name_8 ="Diamond";

l_upgr[101,0]='Boost, level 1';
l_upgr[102,1]='Boost, level 2';
l_upgr[103,2]='Boost, level 3';
l_upgr[104,3]='Boost, level 4';
l_upgr[105,4]='Boost, level 5';

l_upgr[106,0]='Multiplier speed, level 1';
l_upgr[107,1]='Multiplier duration, level 1';
l_upgr[108,0]='Multiplier speed, level 2';
l_upgr[109,1]='Multiplier duration, level 2';
l_upgr[110,0]='Multiplier speed, level 3';
l_upgr[111,1]='Multiplier duration, level 3';
l_upgr[112,0]='Multiplier speed, level 4';
l_upgr[113,1]='Multiplier duration, level 4';

l_upgr[114,1]='Miner skills';
l_upgr[114,2]='Miner skills';
l_upgr[115,1]='Dual Doubleclick';
l_upgr[116,2]='Merged Dual Doubleclick';
l_upgr[117,3]='Merged Dual Doubleclick x2';

l_upgr_descr[101,0]='Activate the boost to make gnomes get '+string(boost_mode_lvl[1])+'% more ore!';
l_upgr_descr[102,1]='Now your gnomes get the ore '+string(boost_mode_lvl[2])+'% faster!';
l_upgr_descr[103,2]='Did you know that your gnomes can work EVEN FASTER? '+string(boost_mode_lvl[3])+'% ore during the boost!';
l_upgr_descr[104,3]='Masters of mining! Gnomes get '+string(boost_mode_lvl[4])+'% ore during the boost.';
l_upgr_descr[105,4]='Gods of mining! Gnomes get '+string(boost_mode_lvl[5])+'% ore during the boost.';

l_upgr_descr[106,0]='Mining multiplier speed x2!';
l_upgr_descr[107,1]='Mining multiplier duration x2!';
l_upgr_descr[108,0]='Mining multiplier speed x2!';
l_upgr_descr[109,1]='Mining multiplier duration x2!';
l_upgr_descr[110,0]='Mining multiplier speed x2!';
l_upgr_descr[111,1]='Mining multiplier duration x2!';
l_upgr_descr[112,0]='Mining multiplier speed x2!';
l_upgr_descr[113,1]='Mining multiplier duration x2!';

l_upgr_descr[114,1]='Base per-tap income x3!';
l_upgr_descr[114,2]='Base per-tap income x3!';

l_upgr[1,0]="Pickaxe";//
l_upgr[1,1]="Pick-hoe";
l_upgr[1,2]="Perfect sharpening";
l_upgr[1,3]="Forgery";
l_upgr[1,4]="Accident prevention";
l_upgr[2,0]="Gnome";//
l_upgr[2,1]="School";
l_upgr[2,2]="Gym";
l_upgr[2,3]="Magic kick";
l_upgr[2,4]="Genome modification";
l_upgr[3,0]="Copper";//
l_upgr[3,1]="Copper pickaxe";
l_upgr[3,2]="Copper research";
l_upgr[3,3]="Copper detector";
l_upgr[3,4]="Copper gnommelier";
l_upgr[4,0]="Bags";//
l_upgr[4,1]="Grips";
l_upgr[4,2]="Increased durability";
l_upgr[4,3]="Pockets";
l_upgr[4,4]="Synthetic materials";
l_upgr[5,0]="Torches";//
l_upgr[5,1]="Viscous resin";
l_upgr[5,2]="Thick torch";
l_upgr[5,3]="Increased brightness";
l_upgr[5,4]="Triple torch";
l_upgr[6,0]="Foreman";//
l_upgr[6,1]="Portfolio";
l_upgr[6,2]="Loudspeaker";
l_upgr[6,3]="Blueprints";
l_upgr[6,4]="Technical task";
l_upgr[7,0]="Brigade";//
l_upgr[7,1]="Commande";
l_upgr[7,2]="Radio set";
l_upgr[7,3]="Brotherhood";
l_upgr[7,4]="Signs";
l_upgr[8,0]="Carts";//
l_upgr[8,1]="Bearings";
l_upgr[8,2]="Capacity";
l_upgr[8,3]="Aerodynamics";
l_upgr[8,4]="Chrome wheel covers";
l_upgr[9,0]="Warehouse";//
l_upgr[9,1]="Loaders";
l_upgr[9,2]="Shelves";
l_upgr[9,3]="Sorting";
l_upgr[9,4]="Guards";
l_upgr[10,0]="Kitchen";//
l_upgr[10,1]="Cook";
l_upgr[10,2]="Potions";
l_upgr[10,3]="Chicken soup";
l_upgr[10,4]="Omars";

l_upgr[11,0]="Cave";//
l_upgr[11,1]="Desinsector";
l_upgr[11,2]="Cave research";
l_upgr[11,3]="Cave maps";
l_upgr[11,4]="Cave excursions";
l_upgr[12,0]="Topaz";//
l_upgr[12,1]="Topaz pickaxe";
l_upgr[12,2]="Topaz research";
l_upgr[12,3]="Topaz detector";
l_upgr[12,4]="Topaz gnommelier";
l_upgr[13,0]="Drill";//
l_upgr[13,1]="Steel edges";
l_upgr[13,2]="Turbo motor";
l_upgr[13,3]="Cooling system";
l_upgr[13,4]="Diamond edges";
l_upgr[14,0]="Mine";//
l_upgr[14,1]="Beams";
l_upgr[14,2]="Pointers";
l_upgr[14,3]="Ventilation";
l_upgr[14,4]="Illumination";
l_upgr[15,0]="Tunnel";//
l_upgr[15,1]="Improved overlap";
l_upgr[15,2]="Columns";
l_upgr[15,3]="Increased length";
l_upgr[15,4]="Pictures on the walls";
l_upgr[16,0]="Elevator";//
l_upgr[16,1]="Electromotor";
l_upgr[16,2]="Cargo compartment";
l_upgr[16,3]="lifter";
l_upgr[16,4]="Increase in carrying capacity";
l_upgr[17,0]="Rails";//
l_upgr[17,1]="Sleepers";
l_upgr[17,2]="Prolonged rails";
l_upgr[17,3]="Smooth connections";
l_upgr[17,4]="Reducing the frictional force";
l_upgr[18,0]="Iron";//
l_upgr[18,1]="Iron pickax";
l_upgr[18,2]="Iron research";
l_upgr[18,3]="Iron detector";
l_upgr[18,4]="Iron gnommelier";
l_upgr[19,0]="Trolley";//
l_upgr[19,1]="Capacity";
l_upgr[19,2]="Lowrider";
l_upgr[19,3]="Aerodynamic bar";
l_upgr[19,4]="Rear view mirrors";
l_upgr[20,0]="Alchemist";//
l_upgr[20,1]="Boiler";
l_upgr[20,2]="Domestic raven";
l_upgr[20,3]="Glasses";
l_upgr[20,4]="Stylish haircut";

l_upgr[21,0]="Excavators";//
l_upgr[21,1]="Increased bucket";
l_upgr[21,2]="Spacious cabin";
l_upgr[21,3]="Hydraulics";
l_upgr[21,4]="CD player";
l_upgr[22,0]="Dumpers";//
l_upgr[22,1]="Increased trailer";
l_upgr[22,2]="Enormous wheels";
l_upgr[22,3]="Diesel motor";
l_upgr[22,4]="Figurine on the hood";
l_upgr[23,0]="Bulldozers";//
l_upgr[23,1]="Increased blade";
l_upgr[23,2]="Tenacious tracks";
l_upgr[23,3]="Turbo accelerator";
l_upgr[23,4]="Car freshner";
l_upgr[24,0]="Emerald";//
l_upgr[24,1]="Emerald pikcaxe";
l_upgr[24,2]="Emerald research";
l_upgr[24,3]="Emerald detector";
l_upgr[24,4]="Emerald gnommelier";
l_upgr[25,0]="Forklifts";//
l_upgr[25,1]="Load capacity";
l_upgr[25,2]="Enlarged volume";
l_upgr[25,3]="Driver";
l_upgr[25,4]="Leather seat";
l_upgr[26,0]="Jackhammers";//
l_upgr[26,1]="Hitting power";
l_upgr[26,2]="Diamond tip";
l_upgr[26,3]="Compressor";
l_upgr[26,4]="Convenient grip";
l_upgr[27,0]="Explosives";//
l_upgr[27,1]="Dynamite";
l_upgr[27,2]="C4";
l_upgr[27,3]="Detonator";
l_upgr[27,4]="Gift wrap";
l_upgr[28,0]="Rotor excavator";//
l_upgr[28,1]="Gigantic rotor";
l_upgr[28,2]="Repair team";
l_upgr[28,3]="Increased speed";
l_upgr[28,4]="Human figure";
l_upgr[29,0]="Mountain";//
l_upgr[29,1]="Geologist";
l_upgr[29,2]="Deep scanning";
l_upgr[29,3]="Tunnel system";
l_upgr[29,4]="Razed to the ground";
l_upgr[30,0]="Silver";//
l_upgr[30,1]="Silver pickaxe";
l_upgr[30,2]="Silver research";
l_upgr[30,3]="Silver detector";
l_upgr[30,4]="Silver gnommelier";

l_upgr[31,0]="Settlement";//
l_upgr[31,1]="Well";
l_upgr[31,2]="Shop";
l_upgr[31,3]="Skyscrapers";
l_upgr[31,4]="Carrot field";
l_upgr[32,0]="Town";//
l_upgr[32,1]="Museum";
l_upgr[32,2]="Water supply";
l_upgr[32,3]="Birth house";
l_upgr[32,4]="Penguin statue";
l_upgr[33,0]="Island";//
l_upgr[33,1]="Group of geologists";
l_upgr[33,2]="Island map";
l_upgr[33,3]="Ship navigation";
l_upgr[33,4]="Gnomess resort";
l_upgr[34,0]="Continent";//
l_upgr[34,1]="Army of geologists";
l_upgr[34,2]="Continent maps";
l_upgr[34,3]="Gnomes occupation";
l_upgr[34,4]="Government";
l_upgr[35,0]="Robotechnics";//
l_upgr[35,1]="Electroactive polymers";
l_upgr[35,2]="Artificial intelligence";
l_upgr[35,3]="Biotechnics";
l_upgr[35,4]="Collective mind";
l_upgr[36,0]="Ruby";//
l_upgr[36,1]="Ruby pickaxe";
l_upgr[36,2]="Ruby research";
l_upgr[36,3]="Ruby detector";
l_upgr[36,4]="Ruby gnommelier";
l_upgr[37,0]="Exoskeletons";//
l_upgr[37,1]="Increased power";
l_upgr[37,2]="Increased resistance";
l_upgr[37,3]="Additional protection";
l_upgr[37,4]="Joyful design";
l_upgr[38,0]="Rainbow accelerators";//
l_upgr[38,1]="Rainbow Collector";
l_upgr[38,2]="Rainbow distortion";
l_upgr[38,3]="Thermo-rainbow reaction";
l_upgr[38,4]="Rainbow explosion";
l_upgr[39,0]="Laser cutter";//
l_upgr[39,1]="Laser edge";
l_upgr[39,2]="Quantum generator";
l_upgr[39,3]="Optical resonator";
l_upgr[39,4]="Silk touch";
l_upgr[40,0]="Nanobots";//
l_upgr[40,1]="Nanofactory";
l_upgr[40,2]="Accelerated self-reproduction";
l_upgr[40,3]="Molecular motors";
l_upgr[40,4]="Electron tunneling";

l_upgr[41,0]="Splitter";//
l_upgr[41,1]="Molecular genocide";
l_upgr[41,2]="Molecular syntheses";
l_upgr[41,3]="Atom splitter";
l_upgr[41,4]="Atom accelerator";
l_upgr[42,0]="Gold";//
l_upgr[42,1]="Golden pickaxe";
l_upgr[42,2]="Gold research";
l_upgr[42,3]="Gold detector";
l_upgr[42,4]="Gold gnommelier";
l_upgr[43,0]="Teleport";//
l_upgr[43,1]="Particle accelerator";
l_upgr[43,2]="God-size portals";
l_upgr[43,3]="Merge of universes";
l_upgr[43,4]="Recombobulators";
l_upgr[44,0]="Spaceship";//
l_upgr[44,1]="Regular flights";
l_upgr[44,2]="Black holes";
l_upgr[44,3]="Space distortion";
l_upgr[44,4]="Antimatter accelerator";
l_upgr[45,0]="Planet";//
l_upgr[45,1]="Acclimatizer";
l_upgr[45,2]="Trans-planet teleportation";
l_upgr[45,3]="Planet scanning";
l_upgr[45,4]="Planet splitter";
l_upgr[46,0]="Galaxy";//
l_upgr[46,1]="Fast galactic colonization";
l_upgr[46,2]="Deep Scanning";
l_upgr[46,3]="Trans-galactic teleportation";
l_upgr[46,4]="Galactic splitter";
l_upgr[47,0]="Time machine";//
l_upgr[47,1]="Quick reload";
l_upgr[47,2]="Stream collector";
l_upgr[47,3]="Quantum corridor";
l_upgr[47,4]="Time paradox recognizer";
l_upgr[48,0]="Antimatter condensator";//
l_upgr[48,1]="String theory";
l_upgr[48,2]="Big bang";
l_upgr[48,3]="Nanocosmics";
l_upgr[48,4]="Antiworld distortion";
l_upgr[49,0]="Diamonds";//
l_upgr[49,1]="Diamond pickaxe";
l_upgr[49,2]="Diamond research";
l_upgr[49,3]="Diamond detector";
l_upgr[49,4]="Diamond gnommelier";
l_upgr[50,0]="Epic upgrade";//
}
else if global.language = 'ru'{

l_st_collect =            "Добыто руды: ";
l_st_collect_by_hand =    "Вручную: ";
l_st_collect_by_auto =    "Автоматически: ";
l_st_clicks =             "Сделано кликов: ";    
     
l_st_purchases =          "Покупок: ";
l_st_income_per_second =  "Доход за секунду: ";    
l_st_income_per_click =   "Доход за клик: "; 
l_st_max_bonus =          "Максимальный бонус: ";  

l_st_currency =           "Открыто валют: ";
l_st_own_items =          "Уникальных предметов: ";        
l_st_own_upgrades =       "Улучшений: ";
l_st_own_glob_upgrades =  "Глобальных улучшений: ";       
   
l_st_stats = 'Статистика:';

l_buy_item        = 'Купите предмет ';
l_boost           = "Буст";
l_increases       = "Увеличивает скорость добычи ресурсов на ";
l_boost_for       = "Буст на ";
l_minute          = " минуты";
l_persec          = '  в сек.';
l_sec             = ' сек';
l_n_shop          = 'Магазин';
l_n_upgrades      = 'Улучшения';
l_n_stats         = 'Статы';
l_no_boost        = 'Видео в данный момент'+'#'+'недоступно!';
l_switch          = 'Переход на новую валюту!';
l_per_tap         = 'за тап';
l_level           = ', уровень';
l_preparing       = 'Готовимся к работе...';

l_upgr[101,0]='Буст, уровень 1';
l_upgr[102,1]='Буст, уровень 2';
l_upgr[103,2]='Буст, уровень 3';
l_upgr[104,3]='Буст, уровень 4';
l_upgr[105,4]='Буст, уровень 5';

l_upgr[106,0]='Прирост множителя, уровень 1';
l_upgr[107,1]='Длительность множителя, уровень 1';
l_upgr[108,0]='Прирост множителя, уровень 2';
l_upgr[109,1]='Длительность множителя, уровень 2';
l_upgr[110,0]='Прирост множителя, уровень 3';
l_upgr[111,1]='Длительность множителя, уровень 3';
l_upgr[112,0]='Прирост множителя, уровень 4';
l_upgr[113,1]='Длительность множителя, уровень 4';

l_upgr[114,1]='Шахтерские навыки';
l_upgr[114,2]='Шахтерские навыки';
l_upgr[115,1]='Удвоенный Двойной Клик';
l_upgr[116,2]='Спаренный Удвоенный Двойной Клик';
l_upgr[117,3]='Спаренный Удвоенный Двойной Клик х2';

l_upgr_descr[101,0]='Активируйте буст, и Гномы помогут вам добывать руду на '+string(boost_mode_lvl[1])+'% быстрее!';
l_upgr_descr[102,1]='Теперь Гномы разрабатывают породу на '+string(boost_mode_lvl[2])+'% быстрее!';
l_upgr_descr[103,2]='Ваши Гномы могут работать ЕЩЕ БЫСТРЕЕ! '+string(boost_mode_lvl[3])+'% руды во время буста!';
l_upgr_descr[104,3]='Гномы добывают на '+string(boost_mode_lvl[4])+'% больше руды во время буста.';
l_upgr_descr[105,4]='Боги шахтерского ремесла! На '+string(boost_mode_lvl[5])+'% больше руды во время буста.';

l_upgr_descr[106,0]='Скорость роста множителя руды x2!';
l_upgr_descr[107,1]='Длительность множителя руды x2!';
l_upgr_descr[108,0]='Скорость роста множителя руды x2!';
l_upgr_descr[109,1]='Длительность множителя руды x2!';
l_upgr_descr[110,0]='Скорость роста множителя руды x2!';
l_upgr_descr[111,1]='Длительность множителя руды x2!';
l_upgr_descr[112,0]='Скорость роста множителя руды x2!';
l_upgr_descr[113,1]='Длительность множителя руды x2!';

l_upgr_descr[114,1]='Базовый доход за тап x3!';
l_upgr_descr[114,2]='Базовый доход за тап x3!';

l_ore_name_0 ="Камни";
l_ore_name_1 ="Медь";
l_ore_name_2 ="Топазы";
l_ore_name_3 ="Железо";
l_ore_name_4 ="Изумруды";
l_ore_name_5 ="Серебро";
l_ore_name_6 ="Рубины";
l_ore_name_7 ="Золото";
l_ore_name_8 ="Алмазы";

l_upgr[1,0]="Кирка";//
l_upgr[1,1]="Кирка-мотыга";
l_upgr[1,2]="Техника безопасности";
l_upgr[1,3]="Идеальная заточка";
l_upgr[1,4]="Кузница";
l_upgr[2,0]="Гном";//
l_upgr[2,1]="Школа";
l_upgr[2,2]="Тренажёрный зал";
l_upgr[2,3]="Волшебный пендаль";
l_upgr[2,4]="Генная модификация";
l_upgr[3,0]="Медь";//
l_upgr[3,1]="Медная кирка";
l_upgr[3,2]="Изучение меди";
l_upgr[3,3]="Детектор меди";
l_upgr[3,4]="Гномелье по меди";
l_upgr[4,0]="Мешки";//
l_upgr[4,1]="Ручки";
l_upgr[4,2]="Увеличение прочности";
l_upgr[4,3]="Карманы";
l_upgr[4,4]="Синтетические материалы";
l_upgr[5,0]="Факелы";//
l_upgr[5,1]="Вязкая смола";
l_upgr[5,2]="Толстый факел";
l_upgr[5,3]="Увеличение яркости";
l_upgr[5,4]="Тройной факел";
l_upgr[6,0]="Прораб";//
l_upgr[6,1]="Портфель";
l_upgr[6,2]="Мегафон";
l_upgr[6,3]="Чертежи";
l_upgr[6,4]="Техническое задание";
l_upgr[7,0]="Бригада";//
l_upgr[7,1]="Бригадир";
l_upgr[7,2]="Рации";
l_upgr[7,3]="Братство";
l_upgr[7,4]="Значки";
l_upgr[8,0]="Телеги";//
l_upgr[8,1]="Подшипники";
l_upgr[8,2]="Вместительность";
l_upgr[8,3]="Аэродинамика";
l_upgr[8,4]="Хромированные колпаки";
l_upgr[9,0]="Склад";//
l_upgr[9,1]="Грузчики";
l_upgr[9,2]="Стеллажи";
l_upgr[9,3]="Сортировка";
l_upgr[9,4]="Охранники";
l_upgr[10,0]="Кухня";//
l_upgr[10,1]="Повар";
l_upgr[10,2]="Зелья";
l_upgr[10,3]="Куриный бульон";
l_upgr[10,4]="Омары";

l_upgr[11,0]="Пещера";//
l_upgr[11,1]="Дезинсектор";
l_upgr[11,2]="Изучение пещер";
l_upgr[11,3]="Карты пещер";
l_upgr[11,4]="Экскурсии в пещеры";
l_upgr[12,0]="Топаз";//
l_upgr[12,1]="Топазовая кирка";
l_upgr[12,2]="Изучение топазов";
l_upgr[12,3]="Детектор топазов";
l_upgr[12,4]="Гномелье по топазам";
l_upgr[13,0]="Бур";//
l_upgr[13,1]="Алмазные кромки";
l_upgr[13,2]="Турбо-двигатель";
l_upgr[13,3]="Система охлаждения";
l_upgr[13,4]="Мифриловые кромки";
l_upgr[14,0]="Шахта";//
l_upgr[14,1]="Балки";
l_upgr[14,2]="Указатели";
l_upgr[14,3]="Вентиляция";
l_upgr[14,4]="Освещение";
l_upgr[15,0]="Туннель";//
l_upgr[15,1]="Улучшенные перекрытия";
l_upgr[15,2]="Колонны";
l_upgr[15,3]="Увеличение длины";
l_upgr[15,4]="Фотографии на стенах";
l_upgr[16,0]="Подъёмник";//
l_upgr[16,1]="Электромотор";
l_upgr[16,2]="Грузовой отсек";
l_upgr[16,3]="Лифтёр ";
l_upgr[16,4]="Увеличение грузоподьёмности";
l_upgr[17,0]="Рельсы";//
l_upgr[17,1]="Шпалы";
l_upgr[17,2]="Удлинённые рельсы";
l_upgr[17,3]="Устранение швов";
l_upgr[17,4]="Уменьшение силы трения";
l_upgr[18,0]="Железо";//
l_upgr[18,1]="Железная кирка";
l_upgr[18,2]="Изучение железа";
l_upgr[18,3]="Детектор железа";
l_upgr[18,4]="Гномелье по железу";
l_upgr[19,0]="Вагонетка";//
l_upgr[19,1]="Вместительность";
l_upgr[19,2]="Низкая посадка";
l_upgr[19,3]="Спойлер";
l_upgr[19,4]="Зеркала заднего вида";
l_upgr[20,0]="Алхимик";//
l_upgr[20,1]="Котёл";
l_upgr[20,2]="Домашний ворон";
l_upgr[20,3]="Очки";
l_upgr[20,4]="Стильная причёска";

l_upgr[21,0]="Экскаваторы";//
l_upgr[21,1]="Увеличенный ковш";
l_upgr[21,2]="Просторная кабина";
l_upgr[21,3]="Гидравлика";
l_upgr[21,4]="Магнитола";
l_upgr[22,0]="Самосвалы";//
l_upgr[22,1]="Увеличенный прицеп";
l_upgr[22,2]="Огромные колёса";
l_upgr[22,3]="Дизельный двигатель";
l_upgr[22,4]="Фигурка на капот";
l_upgr[23,0]="Бульдозеры";//
l_upgr[23,1]="Увеличенный отвал";
l_upgr[23,2]="Цепкие гусеницы";
l_upgr[23,3]="Турбо-ускоритель";
l_upgr[23,4]="Автомобильный освежитель";
l_upgr[24,0]="Изумруд";//
l_upgr[24,1]="Изумрудная кирка";
l_upgr[24,2]="Изучение изумрудов";
l_upgr[24,3]="Детектор изумрудов";
l_upgr[24,4]="Гномелье по изумрудам";
l_upgr[25,0]="Погрузчик";//
l_upgr[25,1]="Грузоподъёмность";
l_upgr[25,2]="Увеличенный подъём";
l_upgr[25,3]="Водитель";
l_upgr[25,4]="Кожаное кресло";
l_upgr[26,0]="Отбойный молоток";//
l_upgr[26,1]="Сила удара";
l_upgr[26,2]="Пика с алмазным наконечником";
l_upgr[26,3]="Компрессор";
l_upgr[26,4]="Удобная ручка";
l_upgr[27,0]="Взрывчатка";//
l_upgr[27,1]="Динамит";
l_upgr[27,2]="Пластиковая взрывчатка";
l_upgr[27,3]="Детонатор";
l_upgr[27,4]="Подарочная упаковка";
l_upgr[28,0]="Роторный экскаватор";//
l_upgr[28,1]="Гигантский ротор";
l_upgr[28,2]="Ремонтная бригада";
l_upgr[28,3]="Увеличение скорости";
l_upgr[28,4]="Фигурка человечка";
l_upgr[29,0]="Гора";//
l_upgr[29,1]="Геолог";
l_upgr[29,2]="Глубокое сканирование";
l_upgr[29,3]="Система туннелей";
l_upgr[29,4]="Сравнять с землёй";
l_upgr[30,0]="Серебро";//
l_upgr[30,1]="Серебрянная кирка";
l_upgr[30,2]="Изучение серебра";
l_upgr[30,3]="Детектор серебра";
l_upgr[30,4]="Гномелье по серебру";

l_upgr[31,0]="Поселение";//
l_upgr[31,1]="Колодец";
l_upgr[31,2]="Магазин";
l_upgr[31,3]="Многоэтажки";
l_upgr[31,4]="Морковное поле";
l_upgr[32,0]="Город";//
l_upgr[32,1]="Музей";
l_upgr[32,2]="Водопровод";
l_upgr[32,3]="Родильный дом";
l_upgr[32,4]="Статуя пингвина";
l_upgr[33,0]="Остров";//
l_upgr[33,1]="Группа геологов";
l_upgr[33,2]="Карта острова";
l_upgr[33,3]="Судоходство";
l_upgr[33,4]="Курорт для гномов";
l_upgr[34,0]="Континент";//
l_upgr[34,1]="Армия геологов";
l_upgr[34,2]="Карты континента";
l_upgr[34,3]="Гномья оккупация";
l_upgr[34,4]="Правительство";
l_upgr[35,0]="Роботехника";//
l_upgr[35,1]="Электроактивные полимеры";
l_upgr[35,2]="Искусственный интеллект";
l_upgr[35,3]="Биотехника";
l_upgr[35,4]="Коллективный разум";
l_upgr[36,0]="Рубин";//
l_upgr[36,1]="Рубиновая кирка";
l_upgr[36,2]="Изучение рубинов";
l_upgr[36,3]="Детектор рубинов";
l_upgr[36,4]="Гномелье по рубинам";
l_upgr[37,0]="Экзоскелеты";//
l_upgr[37,1]="Увеличение силы";
l_upgr[37,2]="Увеличение прочности";
l_upgr[37,3]="Дополнительная защита";
l_upgr[37,4]="Нарядный дизайн";
l_upgr[38,0]="Радужные ускорители";//
l_upgr[38,1]="Радужный накопитель";
l_upgr[38,2]="Искажение радуги";
l_upgr[38,3]="Термо-радужная реакция";
l_upgr[38,4]="Радужный взрыв";
l_upgr[39,0]="Лазерный резак";//
l_upgr[39,1]="Лазерное лезвие";
l_upgr[39,2]="Квантовый генератор";
l_upgr[39,3]="Оптический резонатор";
l_upgr[39,4]="Шелковое касание";
l_upgr[40,0]="Нанороботы";//
l_upgr[40,1]="Нанофабрика";
l_upgr[40,2]="Ускоренное самовоспроизводство";
l_upgr[40,3]="Молекулярные моторы";
l_upgr[40,4]="Туннелирование электронов";

l_upgr[41,0]="Расщепитель";//
l_upgr[41,1]="Молекулярный геноцид";
l_upgr[41,2]="Молекулярный синтез";
l_upgr[41,3]="Атомный расщепитель ";
l_upgr[41,4]="Атомный ускоритель";
l_upgr[42,0]="Золото";//
l_upgr[42,1]="Золотая кирка";
l_upgr[42,2]="Изучение золота";
l_upgr[42,3]="Детектор золота";
l_upgr[42,4]="Гномелье по золоту";
l_upgr[43,0]="Телепорт";//
l_upgr[43,1]="Ускоритель частиц";
l_upgr[43,2]="Порталы громадного размера";
l_upgr[43,3]="Слияние вселенных";
l_upgr[43,4]="Переупорядочиватели";
l_upgr[44,0]="Космический корабль";//
l_upgr[44,1]="Регулярные полеты";
l_upgr[44,2]="Дыры в пространстве";
l_upgr[44,3]="Искривление пространства";
l_upgr[44,4]="Ускоритель антиматерии";
l_upgr[45,0]="Планета";//
l_upgr[45,1]="Климатизатор";
l_upgr[45,2]="Межпланетная телепортация";
l_upgr[45,3]="Сканирование планеты";
l_upgr[45,4]="Планетный расщепитель";
l_upgr[46,0]="Галактика";//
l_upgr[46,1]="Быстрое освоение галактики";
l_upgr[46,2]="Глубокое сканирование";
l_upgr[46,3]="Межгалактическая телепортация";
l_upgr[46,4]="Галактический расщепитель ";
l_upgr[47,0]="Машина времени";//
l_upgr[47,1]="Ускоренная перезарядка";
l_upgr[47,2]="Потоковый накопитель";
l_upgr[47,3]="Квантовый коридор";
l_upgr[47,4]="Распознаватель временных парадоксов ";
l_upgr[48,0]="Конденсатор антиматерии";//
l_upgr[48,1]="Теория струн";
l_upgr[48,2]="Большой взрыв";
l_upgr[48,3]="Нанокосмос";
l_upgr[48,4]="Искажение антимира";
l_upgr[49,0]="Алмазы";//
l_upgr[49,1]="Алмазная кирка";
l_upgr[49,2]="Изучение алмазов";
l_upgr[49,3]="Детектор алмазов";
l_upgr[49,4]="Гномелье по алмазам";
l_upgr[50,0]="Эпический апгрейд";//
}


ore_name = l_ore_name_0;
    
instance_create(room_width/2, room_height/2+mn*12, obj_shop);
instance_create(room_width/2, room_height/2, obj_ore);

instance_create(room_width/2,room_height/2,obj_button_shop);
instance_create(room_width/2,room_height/2,obj_button_upgrades);
instance_create(room_width/2,room_height/2,obj_button_stats);
instance_create(room_width/2,room_height/2,obj_closing_bonus);



instance_create(0,0,obj_gnoome_1);
instance_create(0,0,obj_gnoome_2);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///TILES + OFFLINE

var ots=1;
// -5 - нижняя граница, которая двигается 
for (var i=0; i&lt;ceil(view_wview[0]/512); i++) {
  var tile=tile_add(bg_cave_tiles,256+ots*3,269+ots*3,256,269,view_xview[0]+512*i,view_hview[0]-(269*2),-5);
  tile_set_scale(tile, 2, 2); 
  //полупрозрачный кусочек, срезающий плашки
  tile=tile_add(bg_cave_tiles,0+ots,269+ots*2,256,28,view_xview[0]+512*i,view_hview[0],-5);
  tile_set_scale(tile, 2, 2); 
  
  //заполнение квадратами в магазине
  tile=tile_add(bg_cave_tiles,0+ots,0+ots,256,269,view_xview[0]+512*i,view_hview[0],-3);
  tile_set_scale(tile, 2, 2); 
  tile=tile_add(bg_cave_tiles,0+ots,0+ots,256,269,view_xview[0]+512*i,view_hview[0]+512,-3);
  tile_set_scale(tile, 2, 2);  
  
  //верхняя граница, которая не двигается
  tile=tile_add(bg_cave_tiles,256+ots*3,0,256,269,view_xview[0]+512*i,view_yview[0],-2);
  tile_set_scale(tile, 2, 2);  

}


//даем за оффлайн # applying offline income

//античит проверка
if real(offline_last)&lt; date_current_datetime() {
  //сколько прошло времени с максимальным и минимальным инкомом с последнего захода
  var time_max_income=0;
  var time_min_income=0;
  var max_sec=offline_time*60*60; //сколько секунд дается макс офлайн
  var total_time=date_second_span(real(offline_last), date_current_datetime());//разница в секундах 
  if total_time&lt;=max_sec time_max_income=total_time;//еще даже не закончился макс инком
  else {// макс инком закончился
    time_max_income=max_sec;//макс инком был все должное время
    time_min_income=total_time-max_sec;//мин инком был все остальное время
  }
  
  //добавляем все это к руде
  var ttl=time_max_income*(global.ore_per_second/100*offline_income[1]);
  ttl+=time_min_income*(global.ore_per_second/100*offline_income[0]);
  global.ore_count+=ttl;
  //сохраняем руду и последний заход
  scr_save_main()
  
  var cscore = instance_create(room_width/2, room_height/2, obj_click_score);
  cscore.amount = ttl;
  cscore.line='Оффлайн доход: ';
  cscore.spd=1.7;
  cscore.alpha_spd = 0.002;
  cscore.color = obj_controller.main_color;
  
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SPECIAL SAVING

/*ini_open('Save.sav'); // 1 - ооочень редко
    ini_write_real('obj_controller','ore_color', ore_color);//1
    ini_write_real('obj_controller','ore_picture', ore_picture);//1
    ini_write_string('obj_controller','language', global.language);//1
    ini_write_real('obj_controller','sound', global.sound);//1
    ini_write_real('obj_controller','costmod', global.costmod);//1
    ini_write_real('obj_controller','ore_count', global.ore_count);//0, 2
    ini_write_real('obj_controller','ore_per_second', global.ore_per_second);//2
    ini_write_real('obj_controller','ore_per_click', global.ore_per_click);//2
    ini_write_real('obj_controller','ore_count_all', ore_count_all);//0, 2
    ini_write_real('obj_controller','ore_count_hand', ore_count_hand);//0, 2
    ini_write_real('obj_controller','ore_count_auto', ore_count_auto);//0, 2
    ini_write_real('obj_controller','ore_count_clicks', ore_count_clicks);//0, 2
    ini_write_real('obj_controller','max_bonus', max_bonus);//2
    ini_write_real('obj_controller','closing_taps', closing_taps);//2
    ini_write_real('obj_controller','closing_downspeed', closing_downspeed);//2
    
    ini_write_real('obj_controller','base_click', global.base_click);//2
    ini_write_real('obj_controller','add_click', global.add_click);//2
    ini_write_real('obj_controller','max_base_click', max_base_click);//2
    ini_write_real('obj_controller','lvl_base_click', lvl_base_click);//2
    
    ini_write_real('obj_controller','boost_mode_perc_num', boost_mode_perc_num);//3
    ini_write_real('obj_controller','boost_mode_perc', boost_mode_perc);//3
    ini_write_real('obj_controller','offline_last', (date_current_datetime()));//3
//ini_close();*/

scr_save_main();


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///light changing
randomize();
     if light_alpha &gt;= 1 light_changing=random_range(-0.005,-0.0001)*4
else if light_alpha &lt;= 0.4 light_changing=random_range(0.0001,0.005)*4
else light_changing = random_range(-0.005,0.005)*4;

alarm[5]=random_range(10,30);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(room_width/2, room_height/2, chacker);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SAVING

//ini_open('Save.sav');   
//    ini_write_real('obj_controller','ore_count', global.ore_count);
//    ini_write_real('obj_controller','ore_count_all', ore_count_all);
//    ini_write_real('obj_controller','ore_count_hand', ore_count_hand);
//    ini_write_real('obj_controller','ore_count_auto', ore_count_auto);
//    ini_write_real('obj_controller','ore_count_clicks', ore_count_clicks); 
//ini_close();

scr_save_main();

alarm[3] = room_speed*45;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///boost start

boost_time = boost_time_max* 30;
global.boost_mode= 1;

obj_bonus_button.ads_ready=0;
with obj_gnoome_1 {alarm[0]= 1;}
with obj_gnoome_2 {alarm[0]= 1;}
obj_shop.alarm[2]=10;


// start music
if global.sound= 1{
    if play= 0{
    if !audio_is_playing(snd_ost) audio_play_sound(snd_ost, 1, 0);
    audio_sound_gain(snd_ost, .75, 0);
    }
}
play+= 1;
if play= 4 play= 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>to_main = 0;
obj_shop.shop_pos[global.screen]=obj_shop.y-obj_controller.mn*11;
global.screen=0;
scr_turn_child_list(0)
obj_button_shop.moving = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>to_shop = 0;

obj_button_shop.moving = 0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if fps &lt; 30 {
global.compens = 0.033*fps;
} else global.compens = 1;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.popup_open = 1 and global.boost_mode = 1 {

} else {
ore_sec = ((global.ore_per_second/room_speed)+((global.ore_per_second/room_speed)/100*boost_mode_perc))*global.compens;

global.ore_count += ore_sec;
ore_count_auto += ore_sec;
ore_count_all += ore_sec;
}

for(i=0; i&lt;global.max_click_num; i++) // КЛИК НА РУДУ
{         
if device_mouse_check_button_pressed(i,mb_left) and instance_position(device_mouse_x(i), device_mouse_y(i), obj_ore)
{
if global.popup_open = 0 and global.screen != 3
{
if ore_press != 1 and ore_press != 2 ore_press = 1;
ore_count_clicks += 1;
var click_preres = (global.ore_per_click+(global.ore_per_click/100)*boost_mode_perc);
var click_result = (click_preres+(click_preres/100)*closing_pers); // сколько в результате за клик

ore_count_all += click_result;//сейчас в статистику идет без костмода, а в реале прибавляется с ним
ore_count_hand += click_result;

click_result = click_result/global.costmod; // сколько в результате за клик
if click_result &lt;= 0.1 click_result = 0.1;
global.ore_count += click_result*global.costmod; 

closing_on = 1;
closing_cooldown = closing_cooldown_max;
closing_pers += (1/(closing_taps-closing_pers_mod)); //+1 процент за 20 кликов
var cscore = instance_create(device_mouse_x(i), device_mouse_y(i), obj_click_score);
cscore.amount = click_result;


//sounds
if global.sound = 1{
    var snd = choose(choose(snd_click1,snd_click3,snd_click4,snd_click5,snd_click6,snd_click7,snd_click8,snd_click9),choose(snd_click1,snd_click3,snd_click4,snd_click5,snd_click6,snd_click7,snd_click8,snd_click9),choose(snd_click1,snd_click2,snd_click3,snd_click4,snd_click5,snd_click6,snd_click7,snd_click8,snd_click9));
    audio_play_sound(snd, 1, 0);
    //audio_sound_pitch(snd, random_range(0.95,1.05));
}

}
}
}

if closing_on = 1 //бонус растет
{

    //closing_pers += closing_pers_amount; 
    if closing_pers &gt;= closing_pers_max closing_pers=closing_pers_max;
    if closing_pers &gt; max_bonus max_bonus=closing_pers; 
    
    closing_cooldown -= 1;
    if closing_cooldown &lt;= 0 {closing_on = 2;}
    
    if global.screen = 0 and closing_pers&gt;5 {
        if up_mode3 &lt; 375{//185 
            up_mode3+=0.355/2;
            backx+=0.001/2;
        }
    }

}
else if closing_on = 2 and global.popup_open = 0//бонус уменьшается
{
if global.screen = 0 
{
if backx &gt; 1 backx-=0.001*room_speed; 
if up_mode3 &gt; 0 up_mode3-=0.355*room_speed;
}
closing_pers -= closing_downspeed;

    if closing_pers &lt;= 0 {
        closing_pers=0; 
        closing_on = 0; 
        if global.screen = 0 {backx =1; up_mode3=0;}
        

    }
}

    
if device_mouse_check_button_released(0,mb_left) and ore_press !=0
{
ore_press = 3; //увеличивается
}

if ore_press = 1
{
if ore_press_sieze &gt; 0.95 ore_press_sieze -= 0.025;
if ore_light_sieze &gt; 0.75 ore_light_sieze -= 0.15
else ore_press = 2; //максимально уменьшилась
}
else if ore_press = 3
{
if ore_press_sieze &lt; 1 ore_press_sieze += 0.025;
if ore_light_sieze &lt; 1 ore_light_sieze += 0.15;
else if ore_press_sieze &gt;= 1
{
ore_press_sieze = 1;
ore_light_sieze = 1;
ore_press = 0;
}
}

light_alpha += light_changing;
if light_alpha &gt;= 1 or light_alpha &lt;= 0.4 alarm[5]=1;

//выдвижение магаза
if to_shop = 1
{
backx-=mn1;
up_mode-=mn2;
up_mode2+=mn;
obj_shop.y-=mn;
obj_button_shop.y-=mn*0.97;
obj_button_upgrades.y-=mn*0.97;
obj_button_stats.y-=mn*0.97;
tile_layer_shift(-5,0,-mn);
tile_layer_shift(-3,0,-mn);
obj_shop.ymax-=mn;
}
if to_main = 1
{
backx+=mn1;
up_mode+=mn2;
up_mode2-=mn;
obj_shop.y+=mn;
obj_button_shop.y+=mn*0.97;
obj_button_upgrades.y+=mn*0.97;
obj_button_stats.y+=mn*0.97;
tile_layer_shift(-5,0,mn);
tile_layer_shift(-3,0,mn);
obj_shop.ymax+=mn;
}


if global.boost_mode = 1{
    if global.popup_open = 0{
    boost_time-=1*global.compens;
    boost_mode_perc = boost_mode_lvl[boost_mode_perc_num];
    if boost_time &lt;= 0{
        global.boost_mode = 0;
        obj_gnoome_1.image_speed = 1;
        obj_gnoome_1.image_index = 20;
        obj_gnoome_1.alarm[2]    = 29;
        obj_gnoome_2.image_speed = 1;
        obj_gnoome_2.image_index = 0;
        obj_gnoome_2.alarm[2]    = 49;
        obj_shop.alarm[2]=5;
        boost_mode_perc = 0;
        obj_bonus_button.alarm[1]=boost_restoration;
        obj_bonus_button.alpha = 0.3;
        obj_bonus_button.ads_ready = 0;
        }
    }
} 

if os_is_paused() {
/*ini_open('Save.sav');   
    ini_write_real('obj_controller','ore_count', global.ore_count);
    ini_write_real('obj_controller','ore_count_all', ore_count_all);
    ini_write_real('obj_controller','ore_count_hand', ore_count_hand);
    ini_write_real('obj_controller','ore_count_auto', ore_count_auto);
    ini_write_real('obj_controller','ore_count_clicks', ore_count_clicks);
ini_close();*/
scr_save_main();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// SAVING

//background_delete(background_index[0]);




    log('game end')
    scr_save_main();
    
    
      

/*if file_exists('Save.sav')
//{
    //ini_open('Save.sav');
    /*if ini_section_exists('obj_controller'){
    
    if ini_key_exists('obj_controller','ore')                        ore =                   ini_read_real('obj_controller','ore', 0);
    if ini_key_exists('obj_controller','ore_color')                  ore_color =             ini_read_real('obj_controller','ore_color', 0);
    if ini_key_exists('obj_controller','ore_picture')                ore_picture =           ini_read_real('obj_controller','ore_picture', 0);
    if ini_key_exists('obj_controller','language')                   global.language =       ini_read_string('obj_controller','language', 'en');;
    if ini_key_exists('obj_controller','sound')                      global.sound =          ini_read_real('obj_controller','sound', 1);
    if ini_key_exists('obj_controller','ore_count')                  global.ore_count =      ini_read_real('obj_controller','ore_count', 0);
    if ini_key_exists('obj_controller','ore_per_second')             global.ore_per_second = ini_read_real('obj_controller','ore_per_second', 0);
    if ini_key_exists('obj_controller','ore_per_click')              global.ore_per_click =  ini_read_real('obj_controller','ore_per_click', 1);
    if ini_key_exists('obj_controller','costmod')                    global.costmod =        ini_read_real('obj_controller','costmod', 1);
    
    if ini_key_exists('obj_controller','ore_count_all')              ore_count_all =              ini_read_real('obj_controller','ore_count_all', 1);
    if ini_key_exists('obj_controller','ore_count_hand')             ore_count_hand =             ini_read_real('obj_controller','ore_count_hand', 1);
    if ini_key_exists('obj_controller','ore_count_auto')             ore_count_auto =             ini_read_real('obj_controller','ore_count_auto', 1);
    if ini_key_exists('obj_controller','ore_count_clicks')           ore_count_clicks =           ini_read_real('obj_controller','ore_count_clicks', 1);
    if ini_key_exists('obj_controller','own_items')                  own_items =                  ini_read_real('obj_controller','own_items', 1);
    if ini_key_exists('obj_controller','own_upgrades')               own_upgrades =               ini_read_real('obj_controller','own_upgrades', 1);
    if ini_key_exists('obj_controller','max_bonus')                  max_bonus =                  ini_read_real('obj_controller','max_bonus', 1);
   
    if ini_key_exists('obj_controller','boost_mode_perc_num')        boost_mode_perc_num =        ini_read_real('obj_controller','boost_mode_perc_num', 1);
    if ini_key_exists('obj_controller','boost_mode_perc')            boost_mode_perc =            ini_read_real('obj_controller','boost_mode_perc', 1);
    
    }
    log('game end')
    scr_save_main();
    ini_write_real('obj_controller','ore_count', global.ore_count);
    ini_write_real('obj_controller','offline_last', date_current_datetime());//3
    ini_close();
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SAVING



    log('game end')
    scr_save_main();
    
    
    
    

/*if file_exists('Save.sav')
//{
    //ini_open('Save.sav');
    /*if ini_section_exists('obj_controller'){
    
    if ini_key_exists('obj_controller','ore')                        ore =                   ini_read_real('obj_controller','ore', 0);
    if ini_key_exists('obj_controller','ore_color')                  ore_color =             ini_read_real('obj_controller','ore_color', 0);
    if ini_key_exists('obj_controller','ore_picture')                ore_picture =           ini_read_real('obj_controller','ore_picture', 0);
    if ini_key_exists('obj_controller','language')                   global.language =       ini_read_string('obj_controller','language', 'en');;
    if ini_key_exists('obj_controller','sound')                      global.sound =          ini_read_real('obj_controller','sound', 1);
    if ini_key_exists('obj_controller','ore_count')                  global.ore_count =      ini_read_real('obj_controller','ore_count', 0);
    if ini_key_exists('obj_controller','ore_per_second')             global.ore_per_second = ini_read_real('obj_controller','ore_per_second', 0);
    if ini_key_exists('obj_controller','ore_per_click')              global.ore_per_click =  ini_read_real('obj_controller','ore_per_click', 1);
    if ini_key_exists('obj_controller','costmod')                    global.costmod =        ini_read_real('obj_controller','costmod', 1);
    
    if ini_key_exists('obj_controller','ore_count_all')              ore_count_all =              ini_read_real('obj_controller','ore_count_all', 1);
    if ini_key_exists('obj_controller','ore_count_hand')             ore_count_hand =             ini_read_real('obj_controller','ore_count_hand', 1);
    if ini_key_exists('obj_controller','ore_count_auto')             ore_count_auto =             ini_read_real('obj_controller','ore_count_auto', 1);
    if ini_key_exists('obj_controller','ore_count_clicks')           ore_count_clicks =           ini_read_real('obj_controller','ore_count_clicks', 1);
    if ini_key_exists('obj_controller','own_items')                  own_items =                  ini_read_real('obj_controller','own_items', 1);
    if ini_key_exists('obj_controller','own_upgrades')               own_upgrades =               ini_read_real('obj_controller','own_upgrades', 1);
    if ini_key_exists('obj_controller','max_bonus')                  max_bonus =                  ini_read_real('obj_controller','max_bonus', 1);
   
    if ini_key_exists('obj_controller','boost_mode_perc_num')        boost_mode_perc_num =        ini_read_real('obj_controller','boost_mode_perc_num', 1);
    if ini_key_exists('obj_controller','boost_mode_perc')            boost_mode_perc =            ini_read_real('obj_controller','boost_mode_perc', 1);
    
    }
    log('game end')
    scr_save_main();
    ini_write_real('obj_controller','ore_count', global.ore_count);
    ini_write_real('obj_controller','offline_last', date_current_datetime());//3
    ini_close();
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_sprite_ext(background,0,1024,1024+up_mode*2,backx,backx,0,noone,1); //back

//вот это все и стоне ковер тоже инклюд имейджами сделать
draw_sprite_ext(sp_main_ore_light1,0,1024,1024+up_mode*2,backx,backx,0,ore_color,ore_light_sieze*2*(light_alpha/1.2)); //light on stone
draw_sprite_ext(sp_main_ore_light1,1,1024,1024+up_mode*2,backx,backx,0,ore_color,ore_light_sieze); //ore light
    
with obj_ore { 
draw_sprite_ext(sp_main_ore,other.ore_picture,1024,1024+other.up_mode*2,other.backx*other.ore_press_sieze,other.backx*other.ore_press_sieze,0,other.ore_color,1); //ore
}

draw_sprite_ext(sp_main_stone_cover1,0,1024,1024+up_mode*2,backx,backx,0,noone,1); //stone cover


    




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>display_reset(8,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="55">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.ore_count *=2;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//obj_controller.closing_pers*=2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//global.ore_count += 10*global.costmod;
//
//obj_controller.own_global_upgrades*=2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="52">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//global.ore_count += 1*global.costmod;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="51">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//global.ore_count += 10000;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//global.ore_count += 1000;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.ore_count *= 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(obj_closer){
    if global.screen!=0{
        to_main = 1;
        alarm[1]=mnmult-1;
        obj_button_shop.moving = 1;
        
        if global.sound = 1{
            var snd = snd_8bit_button;
            audio_play_sound(snd, 1, 0);
            audio_sound_pitch(snd, random_range(0.9,1.1));
            }
        }
} 




    

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
