<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>current_craft  = main.craft_energy div (200/100);
current_gather = main.gather_energy div (200/100);

bar_color[0]=c_red;
bar_color[1]=c_yellow;

forage_max=10;

//slider
begin_list=0;
last_y=0;
drop_height=30;
slider_pos=0;
slider_width=30;
slider_height=60;
list_lenght=26;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//draw energy bars
draw_set_color(c_silver);
draw_rectangle(room_width/2+16,1736,room_width/2+16+(512-32),1736+47,0);
draw_rectangle(room_width/2-16-(512-32),1736,room_width/2-16,1736+47,0);
draw_set_color(bar_color[main.gather_energy&gt;-1]);
draw_rectangle(room_width/2+16,1736,room_width/2+16+current_gather,1736+47,0);
draw_set_color(bar_color[main.craft_energy&gt;-1]);
draw_rectangle(room_width/2-16-(512-32),1736,room_width/2-16-(512-32)+current_craft,1736+47,0);

draw_set_font(font_17);
draw_set_color(c_black);
draw_set_valign(fa_middle);
draw_set_halign(fa_center);
draw_text(room_width/2+16+240,1736+24,main.gather_energy);
draw_text(room_width/2-16-(512-32)+240,1736+24,main.craft_energy);

current_gather = (512-32)/100*abs(main.gather_energy);
current_craft = (512-32)/100*abs(main.craft_energy);

//skills
draw_rectangle(room_width/2+16,677,room_width/2+512-16,985,1);
draw_set_halign(fa_left);
for(var i=0; i&lt;ds_list_size(main.skill_list); i++) {
    draw_text(room_width/2+16*2,678+26+30*i,string(ds_list_find_value(main.skill_list,i))+': '+string(ds_map_find_value(main.skill_map,ds_list_find_value(main.skill_list,i))));
}

//inventory
//draw slider for inventory if needed
if ds_list_size(main.inventory_list)&gt;list_lenght {
    slider_height=(list_lenght*drop_height)/ds_list_size(main.inventory_list)*list_lenght;
    //if slider_height&gt;0 {
    if mouse_check_button_pressed(mb_left) and (mouse_x&gt;room_width/2-512+16 and mouse_y&gt;205 and mouse_x&lt;room_width/2-16 and mouse_y&lt;985) {
        //check if we scroll a list
        last_y=mouse_y; 
    } else if mouse_check_button(mb_left) and (mouse_x&gt;room_width/2-512+16 and mouse_y&gt;205 and mouse_x&lt;room_width/2-16 and mouse_y&lt;985) {
        //scroll the list
        if abs(last_y-mouse_y)&gt;drop_height {
            begin_list+=sign(last_y-mouse_y);
            last_y=mouse_y;
            begin_list=clamp(begin_list,0,ds_list_size(main.inventory_list)-list_lenght);
            var slider_min = 0;
            var slider_max = drop_height*list_lenght-slider_height;
            var pos=abs(begin_list/(ds_list_size(main.inventory_list)-list_lenght));
            slider_pos=lerp(slider_min,slider_max,pos);
        }
    }

    draw_set_color(c_silver);
    draw_rectangle(room_width/2-16,205,room_width/2-16-slider_width,985,0);
    draw_set_color(main.color_dkgray);
    draw_rectangle(room_width/2-16,205+slider_pos,room_width/2-16-slider_width,205+slider_pos+slider_height,0);
}
draw_rectangle(room_width/2-512+16,205,room_width/2-16,985,1);
draw_set_valign(fa_top);
for(var i=0; i&lt;min(ds_list_size(main.inventory_num),list_lenght); i++) {
    if i+begin_list&lt;=ds_list_size(main.inventory_num)-1 {
      draw_text(room_width/2-512+16*2,205-4+30*i,string(main.item[0,ds_list_find_value(main.inventory_list,i+begin_list)])+' ('+string(floor(ds_list_find_value(main.inventory_num,i+begin_list)))+')');
    } else {
      log('failed: '+string(ds_list_find_value(main.inventory_list,i+begin_list)))
    }
}

//latest foraged items
draw_set_valign(fa_middle);
draw_rectangle(room_width/2+16,1358,room_width/2+512-16,1682,1);
for(var i=0; i&lt;ds_list_size(main.forage_list); i++) {
    draw_text(room_width/2+16*2,1358+26+30*i,string(ds_list_find_value(main.forage_list,i)));
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(var i=1; i&lt;68; i++) {
    scr_inventory_add(i,1);
}

// 20 small branches
scr_inventory_add(20,20);



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
