<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///main variables

//view
left_border=0;
scr_configure_view();

//draw
tab_width=view_wview[0]/5;
subtab_height=90;
color_dkgray  = make_color_rgb(36,36,45);
color_gray    = make_color_rgb(102,102,102);
color_white   = make_color_rgb(239,239,239);
color_purple  = make_color_rgb(61,6,104);
color_dkblue  = make_color_rgb(3,66,107);
color_button1 = make_color_rgb(0,83,83);
color_button2 = make_color_rgb(0,123,123);
inactive_color = c_gray;

//tabs
active_tab=id;
active_subtab=id;//id of active sub-tab
name='';
info='';
tab[0,0]=id; //id of all tabs starting from 1, for example logs-story is [1,1], craft-reciepes is [2,2]
blocked=0;

sound=1;
craft_energy = 100;
gather_energy= 100;
label[0]='Forage';
label[1]='Chop';
label[2]='Craft';
tool_label[0]='Hands';
tool_label[1]='Axe';
tool_label[2]='Knife';
tool_label[3]='Rock';

message_list[0]=ds_list_create();//order of messages for log-story
message_list[1]=ds_list_create();//order of messages for log-active quests
message_list[2]=ds_list_create();//order of messages for log-completed quests

//surfaces what need to be destroyed to free memory
surf_list=ds_list_create();

quest_buttons_list=ds_list_create();



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///items


// data from the spreadsheet based on the milestone1.1 document:
// https://docs.google.com/spreadsheets/d/1pY-7cnibpSsIJ58K7ZGQDAfXF0Z2S61KsLwfv6ZiEW4/edit?usp=sharing 


//0 = name                          1 = crafted or not    2 = energy if being eaten (0 if not a food)    3 = max durability (0 if not a tool)
item[0,0] = "Hands";                item[1,0] = -1;       item[2,0] = 0;        item[3,0] = -1;
item[0,1] = "Orange";               item[1,1] = 0;        item[2,1] = 1;        item[3,1] = 0;
item[0,2] = "Coconut";              item[1,2] = 0;        item[2,2] = 0;        item[3,2] = 0;
item[0,3] = "Rock";                 item[1,3] = 0;        item[2,3] = 0;        item[3,3] = 5;
item[0,4] = "Peanut";               item[1,4] = 0;        item[2,4] = 1;        item[3,4] = 0;
item[0,5] = "Blue berry";           item[1,5] = 0;        item[2,5] = 1;        item[3,5] = 0;
item[0,6] = "Red berry";            item[1,6] = 0;        item[2,6] = 1;        item[3,6] = 0;
item[0,7] = "Stick";                item[1,7] = 0;        item[2,7] = 0;        item[3,7] = 0;
item[0,8] = "Vine";                 item[1,8] = 0;        item[2,8] = 1;        item[3,8] = 0;
item[0,9] = "Walnut";               item[1,9] = 0;        item[2,9] = -2;       item[3,9] = 0;
item[0,10] = "Chestnut";            item[1,10] = 0;       item[2,10] = -1;      item[3,10] = 0;
item[0,11] = "Lettuce";             item[1,11] = 0;       item[2,11] = 2;       item[3,11] = 0;
item[0,12] = "Tomato";              item[1,12] = 0;       item[2,12] = 3;       item[3,12] = 0;
item[0,13] = "Carrot";              item[1,13] = 0;       item[2,13] = 3;       item[3,13] = 0;
item[0,14] = "Eggplant";            item[1,14] = 0;       item[2,14] = 4;       item[3,14] = 0;
item[0,15] = "Apple";               item[1,15] = 0;       item[2,15] = 4;       item[3,15] = 0;
item[0,16] = "Potato";              item[1,16] = 0;       item[2,16] = 5;       item[3,16] = 0;
item[0,17] = "Mushroom";            item[1,17] = 0;       item[2,17] = 6;       item[3,17] = 0;
item[0,18] = "Egg";                 item[1,18] = 0;       item[2,18] = 7;       item[3,18] = 0;
item[0,19] = "Honeycomb";           item[1,19] = 0;       item[2,19] = 10;      item[3,19] = 0;
item[0,20] = "Small branch";        item[1,20] = 0;       item[2,20] = 0;       item[3,20] = 0;
item[0,21] = "Small trunk";         item[1,21] = 0;       item[2,21] = 0;       item[3,21] = 0;
item[0,22] = "Medium branch";       item[1,22] = 0;       item[2,22] = 0;       item[3,22] = 0;
item[0,23] = "Medium trunk";        item[1,23] = 0;       item[2,23] = 0;       item[3,23] = 0;
item[0,24] = "Large branch";        item[1,24] = 0;       item[2,24] = 0;       item[3,24] = 0;
item[0,25] = "Large trunk";         item[1,25] = 0;       item[2,25] = 0;       item[3,25] = 0;
item[0,26] = "Complete tree";       item[1,26] = 0;       item[2,26] = 0;       item[3,26] = 0;
item[0,27] = "Peeled banana";       item[1,27] = 1;       item[2,27] = 3;       item[3,27] = 0;
item[0,28] = "Peeled orange";       item[1,28] = 1;       item[2,28] = 3;       item[3,28] = 0;
item[0,29] = "Sliced banana";       item[1,29] = 1;       item[2,29] = 8;       item[3,29] = 0;
item[0,30] = "Walnut kernel";       item[1,30] = 1;       item[2,30] = 4;       item[3,30] = 0;
item[0,31] = "Peanut kernel";       item[1,31] = 1;       item[2,31] = 3;       item[3,31] = 0;
item[0,32] = "Half coconut";        item[1,32] = 1;       item[2,32] = 2;       item[3,32] = 0;
item[0,33] = "Mixed berries";       item[1,33] = 1;       item[2,33] = 5;       item[3,33] = 0;
item[0,34] = "Raw coconut";         item[1,34] = 1;       item[2,34] = 8;       item[3,34] = 0;
item[0,35] = "Blue berry mash";     item[1,35] = 1;       item[2,35] = 8;       item[3,35] = 0;
item[0,36] = "Chestnut kernel";     item[1,36] = 1;       item[2,36] = 4;       item[3,36] = 0;
item[0,37] = "Red berry mash";      item[1,37] = 1;       item[2,37] = 8;       item[3,37] = 0;
item[0,38] = "Mixed berry mash";    item[1,38] = 1;       item[2,38] = 15;      item[3,38] = 0;
item[0,39] = "Banana mash";         item[1,39] = 1;       item[2,39] = 12;      item[3,39] = 0;
item[0,40] = "Sliced oranges";      item[1,40] = 1;       item[2,40] = 6;       item[3,40] = 0;
item[0,41] = "Cut lettuce";         item[1,41] = 1;       item[2,41] = 7;       item[3,41] = 0;
item[0,42] = "Sliced carrot";       item[1,42] = 1;       item[2,42] = 8;       item[3,42] = 0;
item[0,43] = "Sliced tomato";       item[1,43] = 1;       item[2,43] = 8;       item[3,43] = 0;
item[0,44] = "Carrot salad";        item[1,44] = 1;       item[2,44] = 20;      item[3,44] = 0;
item[0,45] = "Sliced potato";       item[1,45] = 1;       item[2,45] = 10;      item[3,45] = 0;
item[0,46] = "Sliced eggplant";     item[1,46] = 1;       item[2,46] = 9;       item[3,46] = 0;
item[0,47] = "Tomato salad";        item[1,47] = 1;       item[2,47] = 20;      item[3,47] = 0;
item[0,48] = "Mashed potatoes";     item[1,48] = 1;       item[2,48] = 16;      item[3,48] = 0;
item[0,49] = "Mashed root";         item[1,49] = 1;       item[2,49] = 8;       item[3,49] = 0;
item[0,50] = "Walnut salad";        item[1,50] = 1;       item[2,50] = 16;      item[3,50] = 0;
item[0,51] = "Sliced apple";        item[1,51] = 1;       item[2,51] = 10;      item[3,51] = 0;
item[0,52] = "Sliced mushroom";     item[1,52] = 1;       item[2,52] = 12;      item[3,52] = 0;
item[0,53] = "Sharp stone";         item[1,53] = 1;       item[2,53] = 0;       item[3,53] = 5;
item[0,54] = "Primitive axe";       item[1,54] = 1;       item[2,54] = 0;       item[3,54] = 15;
item[0,55] = "Primitive knife";     item[1,55] = 1;       item[2,55] = 0;       item[3,55] = 15;
item[0,56] = "Primitive hammer";    item[1,56] = 1;       item[2,56] = 0;       item[3,56] = 15;
item[0,57] = "Stone axe head";      item[1,57] = 1;       item[2,57] = 0;       item[3,57] = 0;
item[0,58] = "Stone axe";           item[1,58] = 1;       item[2,58] = 0;       item[3,58] = 25;
item[0,59] = "Vine rope";           item[1,59] = 1;       item[2,59] = 0;       item[3,59] = 0;
item[0,60] = "Small log";           item[1,60] = 1;       item[2,60] = 0;       item[3,60] = 0;
item[0,61] = "Log";                 item[1,61] = 1;       item[2,61] = 0;       item[3,61] = 0;
item[0,62] = "Root";                item[1,62] = 1;       item[2,62] = 0;       item[3,62] = 0;
item[0,63] = "Tree bark";           item[1,63] = 1;       item[2,63] = 0;       item[3,63] = 0;
item[0,64] = "Inner bark";          item[1,64] = 1;       item[2,64] = 0;       item[3,64] = 0;
item[0,65] = "Outer bark";          item[1,65] = 1;       item[2,65] = 0;       item[3,65] = 0;
item[0,66] = "Leaf";                item[1,66] = 1;       item[2,66] = 0;       item[3,66] = 0;
item[0,67] = "Coconut shell";       item[1,67] = 0;       item[2,67] = 0;       item[3,67] = 0;
item[0,68] = "Banana";              item[1,68] = 0;       item[2,68] = 1;       item[3,68] = 0;

//make a list just to easy get name or index
item_list=ds_list_create();
for(var i=0; i&lt;array_length_1d(item); i++) {
    ds_list_add(item_list,item[0,i]);
} 



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///recipes

//we will store recipes in one json string like this and then decode it
//to use as a set of ds_ structures

skill[0]='Forage';
skill[1]='Woodcutting';
skill[2]='Food prep';
skill[3]='Tool making';
skill[4]='Wood working';

//[recipe index, [list of ingredients], skill name, skill amount, energy needed, [list of products] ] 
var recipestring ='{
"Forage": {
    "Hands" : [
        [1000, [], "'+skill[0]+'", 0,    1, [68,68]  ],
        [1001, [], "'+skill[0]+'", 0,    1, [1,1]   ],
        [1002, [], "'+skill[0]+'", 50,  1,  [2,2]   ],
        [1003, [], "'+skill[0]+'", 100,  1, [3,3]   ],
        [1004, [], "'+skill[0]+'", 150,  1, [4,4]   ],
        [1005, [], "'+skill[0]+'", 200,  1, [5,5]   ],
        [1006, [], "'+skill[0]+'", 200,  1, [6,6]   ],
        [1007, [], "'+skill[0]+'", 250,  1, [7,7]   ],
        [1008, [], "'+skill[0]+'", 250,  1, [8]     ],
        [1009, [], "'+skill[0]+'", 300,  1, [9,9]   ],
        [1010, [], "'+skill[0]+'", 300,  1, [10,1]  ],
        [1011, [], "'+skill[0]+'", 350,  1, [11,11] ],
        [1012, [], "'+skill[0]+'", 400,  1, [12,12] ],
        [1013, [], "'+skill[0]+'", 450,  1, [13,13] ],
        [1014, [], "'+skill[0]+'", 500,  1, [14,14] ],
        [1015, [], "'+skill[0]+'", 600,  1, [15,15] ],
        [1016, [], "'+skill[0]+'", 700,  1, [16,16] ],
        [1017, [], "'+skill[0]+'", 800,  1, [17,17] ],
        [1018, [], "'+skill[0]+'", 900,  1, [18,18] ],
        [1019, [], "'+skill[0]+'", 1000, 1, [19]    ],
    ]
}, "Chop": {
    "Axe" : [
        [2000, [],"'+skill[1]+'",0,  2, [20,20]  ],
        [2001, [],"'+skill[1]+'",50,  2,[21,21] ],
        [2002, [],"'+skill[1]+'",200,2, [22,22] ],
        [2003, [],"'+skill[1]+'",400,2, [23,23] ],
        [2004, [],"'+skill[1]+'",600,2, [24,24] ],
        [2005, [],"'+skill[1]+'",800,2, [25,25] ],
        [2006, [],"'+skill[1]+'",1000,2,[26]    ]
    ] 
}, "Craft": {
    "Hands" : [
        [3000, [68],       "'+skill[2]+'",  0,  1, [27] ],
        [3001, [1],        "'+skill[2]+'",  0,  1, [28] ],
        [3002, [4],        "'+skill[2]+'",  50,  1,[31] ],
        [3003, [5,6],      "'+skill[2]+'",  150,1, [33] ],
        [3004, [42,41,67], "'+skill[2]+'",  350,3, [44] ],
        [3005, [43,41,67], "'+skill[2]+'",  350,3, [47] ],
        [3006, [30,41,67], "'+skill[2]+'",  400,3, [50] ],
        [3007, [8,8],      "'+skill[3]+'",100,1, [59] ],
        [3008, [53,8,7],   "'+skill[3]+'",50,  2,[54] ],
        [3009, [3,8,7], "'+skill[3]+'",100,2, [56] ]
    ], "Knife" : [
        [4000, [27], "'+skill[2]+'",    0,  1, [29]    ],
        [4001, [32], "'+skill[2]+'",    150,1, [34]    ],
        [4002, [1],  "'+skill[2]+'",    250,1, [40]    ],
        [4003, [11], "'+skill[2]+'",    300,1, [41]    ],
        [4004, [13], "'+skill[2]+'",    300,1, [42]    ],
        [4005, [12], "'+skill[2]+'",    300,1, [43]    ],
        [4006, [16], "'+skill[2]+'",    350,1, [45]    ],
        [4007, [14], "'+skill[2]+'",    350,1, [46]    ],
        [4008, [15], "'+skill[2]+'",    500,1, [51]    ],
        [4009, [17], "'+skill[2]+'",    550,1, [52]    ],
        [4010, [63], "'+skill[4]+'", 0,  2, [64,65]    ],
        [4011, [3],  "'+skill[3]+'", 100, 1,[57]       ]
    ], "Rock" : [
        [5000, [9],        "'+skill[2]+'",  0,  1, [30]    ],
        [5001, [2],        "'+skill[2]+'",  100,1, [32,32] ],
        [5002, [5,5,67],   "'+skill[2]+'",  150,2, [35]    ],
        [5003, [10],       "'+skill[2]+'",  150,1, [36]    ],
        [5004, [6,6,67],   "'+skill[2]+'",  150,2, [37]    ],
        [5005, [33,33,67], "'+skill[2]+'",  200,2, [38]    ],
        [5006, [27,27,67], "'+skill[2]+'",  200,2, [39]    ],
        [5007, [16,16,67], "'+skill[2]+'",  400,2, [48]    ],
        [5008, [62,62,67], "'+skill[2]+'",  400,2, [49]    ],
        [5009, [3],        "'+skill[3]+'",  0,  1, [53]    ],
        [5010, [53,7],     "'+skill[3]+'",  50,  2,[55]    ],
        [5011, [57,7],     "'+skill[3]+'",  100, 2,[58]    ]
    ], "Axe" : [
        [6000, [20], "'+skill[4]+'",0, 3,   [60,8,8,7,7] ],
        [6001, [22], "'+skill[4]+'",100, 4, [60,8,8,8,7,7,7,66,66,66] ],
        [6002, [24], "'+skill[4]+'",200, 5, [60,60,8,8,8,8,8,7,7,7,7,66,66,66,66] ],
        [6003, [21], "'+skill[4]+'",0, 3,   [61,62,62,63,63,63] ],
        [6004, [23], "'+skill[4]+'",150, 4, [61,61,62,62,62,63,63,63,63] ],
        [6005, [25], "'+skill[4]+'",550, 5, [61,61,61,62,62,62,62,63,63,63,63,63] ],
        [6006, [61], "'+skill[4]+'",50, 2,  [60,6] ],
        [6007, [26], "'+skill[4]+'",900, 6, [25,24,24,24,24] ],
    ]
}

}';

recipe_map = json_decode(recipestring);


//list of all the recipes we know (by index)
descovered_recipes_list=ds_list_create();
recipe_list=ds_list_create();

//total recipes count
total_recipes=0;
var fst=ds_map_find_first(recipe_map);

for(var i=0; i&lt;ds_map_size(recipe_map); i++) {//count how many craft recipes we have in game
    if fst!='Forage' and fst!='Chop' {
    var curr_label_map=ds_map_find_value(recipe_map,fst);// { "Craft": {} }
    var m_fst=ds_map_find_first(curr_label_map);
    
    for(var m=0; m&lt;ds_map_size(curr_label_map); m++) { // { "Craft": { "Hands" : [ [],[],[] ] } }
        var curr_category_list=ds_map_find_value(curr_label_map,m_fst);
        total_recipes+=ds_list_size(curr_category_list);
        //also load recipe strings here? descovered_recipes_list must be already loaded
        for(var l=0; l&lt;ds_list_size(curr_category_list); l++) {
            //check if we know any recipe
            if ds_list_find_index(descovered_recipes_list,ds_list_find_value(ds_list_find_value(curr_category_list,l),0))!=-1 {
                //if we do, add it to recipe_list as a string
                ds_list_add(recipe_list,scr_create_recipe_string(ds_list_find_value(curr_category_list,l),m_fst));
            }
        }
        m_fst=ds_map_find_next(curr_label_map,m_fst);
    }
    }
    fst=ds_map_find_next(recipe_map,fst);
}

//skills (name and basic amount)
skill_map=ds_map_create();
skill_list=ds_list_create();//only descovered skills
ds_map_add(skill_map,skill[0],0);
ds_map_add(skill_map,skill[1],0);
ds_map_add(skill_map,skill[2],0);
ds_map_add(skill_map,skill[3],0);
ds_map_add(skill_map,skill[4],0);
ds_list_add(skill_list,skill[0]);

/*
skill[0,0]='Forage';
skill[0,1]='Woodcutting';
skill[0,2]='Food prep';
skill[0,3]='Tool making';
skill[0,4]='Wood working';

skill[1,0]=0;
skill[1,1]=-1;
skill[1,2]=-1;
skill[1,3]=-1;
skill[1,4]=-1;*/

tool_default='Hands';
inventory_list=ds_list_create();
inventory_num=ds_list_create();
forage_list=ds_list_create();


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///txt

//story messages
txt_story[1]='The story thus far...#There is a bad guy and we need to defeat him. But, before we do that, let’s build some things. And to build stuff, we first need to gather stuff. Time to forage!';
txt_story[2]='I wonder where I am.';
txt_story[3]='You are making progress to defeating the bad guy.';
txt_story[4]='Your skill is growing greatly.';
txt_story[5]='10% every 1 minute triggered.';
txt_story[6]='2% on gather button triggered.';
txt_story[7]='1% on craft button triggered.';
txt_story[8]='After Primitive knife, 20% every 30 seconds triggered.';

//tutorial messages (these messages are displayed in a gray italic font)
txt_tutorial[1]='This place has delicious fruit. You should eat some.';
txt_tutorial[2]='Excellent foraging job; keep up the good work. Don’t forget to keep your gather energy up by eating!';
txt_tutorial[3]='First recipe discovered.';

//quests description
txt_quest[1]='Eat some food';
txt_quest[2]='Replenish gather energy; eat some oranges';
txt_quest[3]='Placeholder quest 3';
txt_quest[4]='Placeholder quest 4';
txt_quest[5]='Placeholder quest 5';
txt_quest[6]='Placeholder quest 6';
txt_quest[7]='Placeholder quest 7';
txt_quest[8]='Placeholder quest 8';
txt_quest[9]='Placeholder quest 9';
txt_quest[10]='Placeholder quest 10';
txt_quest[11]='Placeholder quest 11';
txt_quest[12]='Placeholder quest 12';
txt_quest[13]='Placeholder quest 13';
txt_quest[14]='Placeholder quest 14';
txt_quest[15]='Placeholder quest 15';
txt_quest[16]='Placeholder quest 16';
txt_quest[17]='Placeholder quest 17';
txt_quest[18]='Placeholder quest 18';
txt_quest[19]='Placeholder quest 19';
txt_quest[20]='Placeholder quest 20';
txt_quest[21]='Placeholder quest 21';
txt_quest[22]='Placeholder quest 22';
txt_quest[23]='Placeholder quest 23';
txt_quest[24]='Placeholder quest 24';
txt_quest[25]='Placeholder quest 25';
txt_quest[26]='Placeholder quest 26';
txt_quest[27]='Placeholder quest 27';
txt_quest[28]='Placeholder quest 28';
txt_quest[29]='Placeholder quest 29';
txt_quest[30]='Placeholder quest 30';



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create tabs

for(var i=0;i&lt;5;i++) {
    var mtab=instance_create((tab_width*i)+tab_width/2,room_height-100/2,obj_tab);
    mtab.image_xscale=(tab_width/2)-4;
    mtab.image_yscale=(100)/2;
    mtab.index=i+1;
    mtab.parent=id;
    mtab.image_blend=color_dkgray;
    tab[i+1,0]=mtab;
}

//working with tabs
with obj_tab {
switch index {
case 1: // LOGS TAB

subtab_num=3;
scr_create_subtab(subtab_num);
main.active_tab=id;
name='Logs';

with obj_subtab {
if father=other {
    switch index {
    case 1: // logs-story
    main.active_subtab=id;
    info_name='Completed: ';
    info_value=0;
    info_metric='%';
    name='Story';
    shortname=name;
    
    //creat object inside subtab, adding it to the list
    var text=instance_create(0,0,obj_text_scroll);
    text.index=0;
    text.parent=id;
    ds_list_add(child_list,text);
    
    break;
    
    case 2: // logs-active quest
    info_name='';
    info_value=0;
    info_metric='%';
    name='Active Quests';
    shortname='Active#Quests';
    
    //creat object inside subtab, adding it to the list
    var text=instance_create(0,0,obj_text_scroll);
    text.index=1;
    text.parent=id;
    ds_list_add(child_list,text);
    break;
    
    case 3: // logs-completed quest
    info_name='';
    info_value=0;
    info_metric='%';
    name='Complete Quests';
    shortname='Complete#Quests';
    
    //creat object inside subtab, adding it to the list
    var text=instance_create(0,0,obj_text_scroll);
    text.index=2;
    text.parent=id;
    ds_list_add(child_list,text);
    break;
    }    
    info=scr_subtab_info();
}
}
break;

case 2: // CRAFT TAB
subtab_num=2;
scr_create_subtab(subtab_num);
name='Craft';
with obj_subtab {
if father=other {
    switch index {
    case 1: // craft-craft
    info_name='';
    info_value=0;
    info_metric='%';
    name='Craft';
    shortname=name;
    
    craft = instance_create(0,0,obj_craft);//main craft tab controller
    
    //tools dropdowns
    var drop1 = instance_create(room_width/2-16-132,1110+154*0,obj_dropdown);//eat food
    drop1.index=0;
    var drop2 = instance_create(room_width/2+16+132,1110+154*0,obj_dropdown);//gather food
    drop2.index=1;
    var drop3 = instance_create(room_width/2-16-132,1110+154*1,obj_dropdown);//craft
    drop3.index=2;
    var drop4 = instance_create(room_width/2+16+132,1110+154*1,obj_dropdown);//forage
    drop4.index=3;
    
    //ingridients dropdown
    var drop5 = instance_create(room_width/2-16-110/2,1400+88*0,obj_dropdown);//ingredient 1 num
    drop5.index=4;
    var drop6 = instance_create(room_width/2-16-110/2,1400+88*1,obj_dropdown);//ingredient 2 num
    drop6.index=5;
    var drop7 = instance_create(room_width/2-16-110/2,1400+88*2,obj_dropdown);//ingredient 3 num
    drop7.index=6;
    var drop8 = instance_create(room_width/2-16*2-110-132,1400+88*0,obj_dropdown);//ingredient 1 
    drop8.index=7;
    var drop9 = instance_create(room_width/2-16*2-110-132,1400+88*1,obj_dropdown);//ingredient 2 
    drop9.index=8;
    var drop10= instance_create(room_width/2-16*2-110-132,1400+88*2,obj_dropdown);//ingredient 3 
    drop10.index=9;
    
    //link ingredient types and amounts
    drop5.target=drop8;
    drop6.target=drop9;
    drop7.target=drop10;
    drop8.target=drop5;
    drop9.target=drop6;
    drop10.target=drop7;
    
    //buttons
    var button1 = instance_create(room_width/2-16*2-132*2-91,1110+154*0,obj_button);//eat food
    button1.index=0;
    var button2 = instance_create(room_width/2+16*2+132*2+91,1110+154*0,obj_button);//gather food
    button2.index=1;
    var button3 = instance_create(room_width/2-16*2-132*2-91,1110+154*1,obj_button);//craft
    button3.index=2;
    var button4 = instance_create(room_width/2+16*2+132*2+91,1110+154*1,obj_button);//forage
    button4.index=3;
    
    ds_list_add(child_list,craft,drop1,drop2,drop3,drop4,drop5,drop6,drop7,drop8,drop9,drop10,button1,button2,button3,button4);
    break;
    
    case 2: // craft-reciepes
    info_name='Discovered: ';
    info_value=0;
    info_metric='/'+string(main.total_recipes);
    name='Recipes';
    shortname=name;
    
    //creat object inside subtab, adding it to the list
    //recipes list
    var text=instance_create(0,0,obj_text_scroll);
    text.index=3;
    text.parent=id;
    ds_list_add(child_list,text);
    break;
    }  
    info=scr_subtab_info();  
}
}
break;

case 3: // EXPLORE TAB
subtab_num=1;
scr_create_subtab(subtab_num);
name='Explore';
with obj_subtab {
if father=other {
    switch index {
    case 1: // explore-explore
    info_name='';
    info_value=0;
    info_metric='%';
    name='Explore';
    shortname=name;
    break;
    }  
    info=scr_subtab_info();  
}
}
break;

case 4: // VILLAGE TAB
subtab_num=1;
scr_create_subtab(subtab_num);
name='Village';
with obj_subtab {
if father=other {
    switch index {
    case 1: // village-village
    info_name='';
    info_value=0;
    info_metric='%';
    name='Village';
    shortname=name;
    break;
    }  
    info=scr_subtab_info();  
}
}
break;

case 5: // SETTINGS TAB
subtab_num=1;
scr_create_subtab(subtab_num);
name='Settings';
with obj_subtab {
if father=other {
    switch index {
    case 1: // settings-settings
    info_name='';
    info_value=0;
    info_metric='%';
    name='Settings';
    shortname=name;
    
    //debug buttons for restart
    var button1=instance_create(room_width/2,room_height/2-200,obj_button);
    button1.index=4;
    var button2=instance_create(room_width/2,room_height/2+200,obj_button);
    button2.index=5;
    ds_list_add(child_list,button1,button2);
    break;
    }  
    info=scr_subtab_info();  
}
}
break;
}
}


//ds_list_add(child_list,000);
//scr_tab_activate(1,1);
with obj_subtab {
    if id!=main.active_subtab{
        active=0;
        for(var i=0;i&lt;ds_list_size(child_list);i++) { 
            instance_deactivate_object(ds_list_find_value(child_list,i)); 
        }
    } else {
        active=1;
        image_blend = main.color_purple;
    }
}
with main.active_tab { //deactivate previous tab
    active=1;
    image_blend = main.color_white;
    active_subtab=1;
    txt_color=c_black;
    for(var sb=0;sb&lt;subtab_num;sb++) {
        with main.tab[index,sb+1] visible=1;
    }
}

//add message - story message 1
scr_message_add(0,1);

var story=instance_create(0,0,obj_story);
story.alarm[0]=room_speed*60*2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room=room_main {
    //top gray back
    draw_set_color(color_dkgray);
    draw_rectangle(0,0,room_width,6+subtab_height,0);
    //sub-tab title back
    draw_set_color(color_purple);
    draw_rectangle(0,6+subtab_height,room_width,6+subtab_height+90,0);
    //active sub-tub name
    draw_set_color(c_white);
    draw_set_font(font_22);
    draw_set_valign(fa_middle);
    draw_set_halign(fa_left);
    draw_text(44,6+subtab_height+90/2,active_subtab.name);
    //active sub-tub info, if any ('complete 2%' in story sub-tab)
    draw_set_color(c_white);
    draw_set_font(font_17);
    draw_set_valign(fa_middle);
    draw_set_halign(fa_right);
    draw_text(room_width-44,6+subtab_height+90/2,active_subtab.info);
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="106">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///restart 

game_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///debug: add text
var rndmsg=round(random_range(1,array_length_1d(txt_story)-1));
ds_list_add(message_list[0],rndmsg);

var rndmsg=round(random_range(3,array_length_1d(txt_quest)-1));
scr_message_add(2,rndmsg);

var rndmsg=round(random_range(3,array_length_1d(txt_quest)-1));
scr_message_add(3,rndmsg);


if instance_exists(obj_text_scroll) obj_text_scroll.alarm[0]=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
